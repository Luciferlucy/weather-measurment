
project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f7a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000c4  00800060  00000f7a  0000100e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800124  00800124  000010d2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000010d2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001104  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00001140  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018bc  00000000  00000000  00001270  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c25  00000000  00000000  00002b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001d04  00000000  00000000  00003751  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001dc  00000000  00000000  00005458  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00007e84  00000000  00000000  00005634  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008ac  00000000  00000000  0000d4b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  0000dd64  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003265  00000000  00000000  0000de24  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	a6 c0       	rjmp	.+332    	; 0x14e <__ctors_end>
   2:	00 00       	nop
   4:	bf c0       	rjmp	.+382    	; 0x184 <__bad_interrupt>
   6:	00 00       	nop
   8:	bd c0       	rjmp	.+378    	; 0x184 <__bad_interrupt>
   a:	00 00       	nop
   c:	bb c0       	rjmp	.+374    	; 0x184 <__bad_interrupt>
   e:	00 00       	nop
  10:	b9 c0       	rjmp	.+370    	; 0x184 <__bad_interrupt>
  12:	00 00       	nop
  14:	b7 c0       	rjmp	.+366    	; 0x184 <__bad_interrupt>
  16:	00 00       	nop
  18:	b5 c0       	rjmp	.+362    	; 0x184 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	b3 c0       	rjmp	.+358    	; 0x184 <__bad_interrupt>
  1e:	00 00       	nop
  20:	b1 c0       	rjmp	.+354    	; 0x184 <__bad_interrupt>
  22:	00 00       	nop
  24:	af c0       	rjmp	.+350    	; 0x184 <__bad_interrupt>
  26:	00 00       	nop
  28:	ad c0       	rjmp	.+346    	; 0x184 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	ab c0       	rjmp	.+342    	; 0x184 <__bad_interrupt>
  2e:	00 00       	nop
  30:	a9 c0       	rjmp	.+338    	; 0x184 <__bad_interrupt>
  32:	00 00       	nop
  34:	a7 c0       	rjmp	.+334    	; 0x184 <__bad_interrupt>
  36:	00 00       	nop
  38:	a5 c0       	rjmp	.+330    	; 0x184 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	a3 c0       	rjmp	.+326    	; 0x184 <__bad_interrupt>
  3e:	00 00       	nop
  40:	a1 c0       	rjmp	.+322    	; 0x184 <__bad_interrupt>
  42:	00 00       	nop
  44:	9f c0       	rjmp	.+318    	; 0x184 <__bad_interrupt>
  46:	00 00       	nop
  48:	9d c0       	rjmp	.+314    	; 0x184 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	9b c0       	rjmp	.+310    	; 0x184 <__bad_interrupt>
  4e:	00 00       	nop
  50:	99 c0       	rjmp	.+306    	; 0x184 <__bad_interrupt>
	...

00000054 <__trampolines_end>:
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <__mulsf3_pse+0x52>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__addsf3+0xe>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <int_Dhtt+0xb8>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <DIREC+0xc>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d8 e0       	ldi	r29, 0x08	; 8
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	11 e0       	ldi	r17, 0x01	; 1
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	ea e7       	ldi	r30, 0x7A	; 122
 162:	ff e0       	ldi	r31, 0x0F	; 15
 164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0
 16a:	a4 32       	cpi	r26, 0x24	; 36
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
 170:	21 e0       	ldi	r18, 0x01	; 1
 172:	a4 e2       	ldi	r26, 0x24	; 36
 174:	b1 e0       	ldi	r27, 0x01	; 1
 176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
 178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
 17a:	aa 32       	cpi	r26, 0x2A	; 42
 17c:	b2 07       	cpc	r27, r18
 17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
 180:	02 d2       	rcall	.+1028   	; 0x586 <main>
 182:	f9 c6       	rjmp	.+3570   	; 0xf76 <_exit>

00000184 <__bad_interrupt>:
 184:	3d cf       	rjmp	.-390    	; 0x0 <__vectors>

00000186 <adc_init>:
#include "ADC.h"

void adc_init(void){
	
#if ADC_Enable == ENABLED
    SET_BiT(ADC_ADCSRA,ADC_ADEN); //enable ADC
 186:	37 9a       	sbi	0x06, 7	; 6
	//selection for the power form
	#if ADC_SOURCE == ADC_SOURCE_AREF
	    CLR_Bit(ADC_ADMUX,ADC_REFS1);
	    CLR_Bit(ADC_ADMUX,ADC_REFS0);
	#elif ADC_SOURCE == ADC_SOURCE_AVCC
	      CLR_Bit(ADC_ADMUX,ADC_REFS1);
 188:	3f 98       	cbi	0x07, 7	; 7
	      SET_BiT(ADC_ADMUX,ADC_REFS0);
 18a:	3e 9a       	sbi	0x07, 6	; 7
	#elif PRESCALLER == DIV_FACT_32P
	    ADC_ADCSRA = (ADC_ADCSRA & 0b11111000) | DIV_FACT_32P ;
	#elif PRESCALLER == DIV_FACT_64P
	    ADC_ADCSRA = (ADC_ADCSRA & 0b11111000) | DIV_FACT_64P ;
	#elif PRESCALLER == DIV_FACT_128P
	    ADC_ADCSRA = (ADC_ADCSRA & 0b11111000) | DIV_FACT_128P ;
 18c:	86 b1       	in	r24, 0x06	; 6
 18e:	87 60       	ori	r24, 0x07	; 7
 190:	86 b9       	out	0x06, r24	; 6
 192:	08 95       	ret

00000194 <ADC_READ>:
	#endif
#endif

}
TU16 ADC_READ (TU08 channel){
	if (channel ==1){
 194:	81 30       	cpi	r24, 0x01	; 1
 196:	21 f4       	brne	.+8      	; 0x1a0 <ADC_READ+0xc>
		//adc1
		ADC_ADMUX = (ADC_ADMUX & 0b11100000) | channel;
 198:	87 b1       	in	r24, 0x07	; 7
 19a:	80 7e       	andi	r24, 0xE0	; 224
 19c:	81 60       	ori	r24, 0x01	; 1
 19e:	87 b9       	out	0x07, r24	; 7
	}
	SET_BiT(ADC_ADCSRA,ADC_ADSC); //START CONVERSION
 1a0:	36 9a       	sbi	0x06, 6	; 6
	while(GET_Bit(ADC_ADCSRA,ADC_ADIF)==0); // wait for conversion to finish
 1a2:	34 9b       	sbis	0x06, 4	; 6
 1a4:	fe cf       	rjmp	.-4      	; 0x1a2 <ADC_READ+0xe>
	SET_BiT(ADC_ADCSRA,ADC_ADIF);
 1a6:	34 9a       	sbi	0x06, 4	; 6
	return ADC_HL;
 1a8:	84 b1       	in	r24, 0x04	; 4
 1aa:	95 b1       	in	r25, 0x05	; 5
 1ac:	08 95       	ret

000001ae <DIREC>:
	{D,PiN6,HIGH,OUT},
	{D,PiN7,HIGH,OUT},
};


void DIREC (void){
 1ae:	e0 e6       	ldi	r30, 0x60	; 96
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	20 ee       	ldi	r18, 0xE0	; 224
 1b4:	30 e0       	ldi	r19, 0x00	; 0
			}
		}else if (pins[i].PORT==D){
			if(pins[i].O == OUT){
				SET_BiT(DIO_DDRD,pins[i].P);
				}else{
				CLR_Bit(DIO_DDRD,pins[i].P);
 1b6:	61 e0       	ldi	r22, 0x01	; 1
 1b8:	70 e0       	ldi	r23, 0x00	; 0
void DIREC (void){
	TU08 count =0;
	count= sizeof(pins) / (sizeof pins[0]);
	TU08 i;
	for(i=0;i<count;i++){
		if(pins[i].PORT==A){
 1ba:	80 81       	ld	r24, Z
 1bc:	81 11       	cpse	r24, r1
 1be:	1b c0       	rjmp	.+54     	; 0x1f6 <DIREC+0x48>
			if(pins[i].O == OUT){
 1c0:	83 81       	ldd	r24, Z+3	; 0x03
 1c2:	81 11       	cpse	r24, r1
 1c4:	0b c0       	rjmp	.+22     	; 0x1dc <DIREC+0x2e>
			SET_BiT(DIO_DDRA,pins[i].P);
 1c6:	4a b3       	in	r20, 0x1a	; 26
 1c8:	cb 01       	movw	r24, r22
 1ca:	01 80       	ldd	r0, Z+1	; 0x01
 1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <DIREC+0x24>
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	0a 94       	dec	r0
 1d4:	e2 f7       	brpl	.-8      	; 0x1ce <DIREC+0x20>
 1d6:	84 2b       	or	r24, r20
 1d8:	8a bb       	out	0x1a, r24	; 26
 1da:	63 c0       	rjmp	.+198    	; 0x2a2 <DIREC+0xf4>
			}else{
			CLR_Bit(DIO_DDRA,pins[i].P);	
 1dc:	9a b3       	in	r25, 0x1a	; 26
 1de:	ab 01       	movw	r20, r22
 1e0:	01 80       	ldd	r0, Z+1	; 0x01
 1e2:	02 c0       	rjmp	.+4      	; 0x1e8 <DIREC+0x3a>
 1e4:	44 0f       	add	r20, r20
 1e6:	55 1f       	adc	r21, r21
 1e8:	0a 94       	dec	r0
 1ea:	e2 f7       	brpl	.-8      	; 0x1e4 <DIREC+0x36>
 1ec:	84 2f       	mov	r24, r20
 1ee:	80 95       	com	r24
 1f0:	89 23       	and	r24, r25
 1f2:	8a bb       	out	0x1a, r24	; 26
 1f4:	56 c0       	rjmp	.+172    	; 0x2a2 <DIREC+0xf4>
			}
		}else if (pins[i].PORT==B){
 1f6:	81 30       	cpi	r24, 0x01	; 1
 1f8:	d9 f4       	brne	.+54     	; 0x230 <DIREC+0x82>
			if(pins[i].O == OUT){
 1fa:	83 81       	ldd	r24, Z+3	; 0x03
 1fc:	81 11       	cpse	r24, r1
 1fe:	0b c0       	rjmp	.+22     	; 0x216 <DIREC+0x68>
				SET_BiT(DIO_DDRB,pins[i].P);
 200:	47 b3       	in	r20, 0x17	; 23
 202:	cb 01       	movw	r24, r22
 204:	01 80       	ldd	r0, Z+1	; 0x01
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIREC+0x5e>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	0a 94       	dec	r0
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIREC+0x5a>
 210:	84 2b       	or	r24, r20
 212:	87 bb       	out	0x17, r24	; 23
 214:	46 c0       	rjmp	.+140    	; 0x2a2 <DIREC+0xf4>
				}else{
				CLR_Bit(DIO_DDRB,pins[i].P);
 216:	97 b3       	in	r25, 0x17	; 23
 218:	ab 01       	movw	r20, r22
 21a:	01 80       	ldd	r0, Z+1	; 0x01
 21c:	02 c0       	rjmp	.+4      	; 0x222 <DIREC+0x74>
 21e:	44 0f       	add	r20, r20
 220:	55 1f       	adc	r21, r21
 222:	0a 94       	dec	r0
 224:	e2 f7       	brpl	.-8      	; 0x21e <DIREC+0x70>
 226:	84 2f       	mov	r24, r20
 228:	80 95       	com	r24
 22a:	89 23       	and	r24, r25
 22c:	87 bb       	out	0x17, r24	; 23
 22e:	39 c0       	rjmp	.+114    	; 0x2a2 <DIREC+0xf4>
			}
		}else if (pins[i].PORT==C){
 230:	82 30       	cpi	r24, 0x02	; 2
 232:	d9 f4       	brne	.+54     	; 0x26a <DIREC+0xbc>
			if(pins[i].O == OUT){
 234:	83 81       	ldd	r24, Z+3	; 0x03
 236:	81 11       	cpse	r24, r1
 238:	0b c0       	rjmp	.+22     	; 0x250 <DIREC+0xa2>
				SET_BiT(DIO_DDRC,pins[i].P);
 23a:	44 b3       	in	r20, 0x14	; 20
 23c:	cb 01       	movw	r24, r22
 23e:	01 80       	ldd	r0, Z+1	; 0x01
 240:	02 c0       	rjmp	.+4      	; 0x246 <DIREC+0x98>
 242:	88 0f       	add	r24, r24
 244:	99 1f       	adc	r25, r25
 246:	0a 94       	dec	r0
 248:	e2 f7       	brpl	.-8      	; 0x242 <DIREC+0x94>
 24a:	84 2b       	or	r24, r20
 24c:	84 bb       	out	0x14, r24	; 20
 24e:	29 c0       	rjmp	.+82     	; 0x2a2 <DIREC+0xf4>
				}else{
				CLR_Bit(DIO_DDRC,pins[i].P);
 250:	94 b3       	in	r25, 0x14	; 20
 252:	ab 01       	movw	r20, r22
 254:	01 80       	ldd	r0, Z+1	; 0x01
 256:	02 c0       	rjmp	.+4      	; 0x25c <DIREC+0xae>
 258:	44 0f       	add	r20, r20
 25a:	55 1f       	adc	r21, r21
 25c:	0a 94       	dec	r0
 25e:	e2 f7       	brpl	.-8      	; 0x258 <DIREC+0xaa>
 260:	84 2f       	mov	r24, r20
 262:	80 95       	com	r24
 264:	89 23       	and	r24, r25
 266:	84 bb       	out	0x14, r24	; 20
 268:	1c c0       	rjmp	.+56     	; 0x2a2 <DIREC+0xf4>
			}
		}else if (pins[i].PORT==D){
 26a:	83 30       	cpi	r24, 0x03	; 3
 26c:	d1 f4       	brne	.+52     	; 0x2a2 <DIREC+0xf4>
			if(pins[i].O == OUT){
 26e:	83 81       	ldd	r24, Z+3	; 0x03
 270:	81 11       	cpse	r24, r1
 272:	0b c0       	rjmp	.+22     	; 0x28a <DIREC+0xdc>
				SET_BiT(DIO_DDRD,pins[i].P);
 274:	41 b3       	in	r20, 0x11	; 17
 276:	cb 01       	movw	r24, r22
 278:	01 80       	ldd	r0, Z+1	; 0x01
 27a:	02 c0       	rjmp	.+4      	; 0x280 <DIREC+0xd2>
 27c:	88 0f       	add	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	0a 94       	dec	r0
 282:	e2 f7       	brpl	.-8      	; 0x27c <DIREC+0xce>
 284:	84 2b       	or	r24, r20
 286:	81 bb       	out	0x11, r24	; 17
 288:	0c c0       	rjmp	.+24     	; 0x2a2 <DIREC+0xf4>
				}else{
				CLR_Bit(DIO_DDRD,pins[i].P);
 28a:	91 b3       	in	r25, 0x11	; 17
 28c:	ab 01       	movw	r20, r22
 28e:	01 80       	ldd	r0, Z+1	; 0x01
 290:	02 c0       	rjmp	.+4      	; 0x296 <DIREC+0xe8>
 292:	44 0f       	add	r20, r20
 294:	55 1f       	adc	r21, r21
 296:	0a 94       	dec	r0
 298:	e2 f7       	brpl	.-8      	; 0x292 <DIREC+0xe4>
 29a:	84 2f       	mov	r24, r20
 29c:	80 95       	com	r24
 29e:	89 23       	and	r24, r25
 2a0:	81 bb       	out	0x11, r24	; 17
 2a2:	34 96       	adiw	r30, 0x04	; 4

void DIREC (void){
	TU08 count =0;
	count= sizeof(pins) / (sizeof pins[0]);
	TU08 i;
	for(i=0;i<count;i++){
 2a4:	e2 17       	cp	r30, r18
 2a6:	f3 07       	cpc	r31, r19
 2a8:	09 f0       	breq	.+2      	; 0x2ac <DIREC+0xfe>
 2aa:	87 cf       	rjmp	.-242    	; 0x1ba <DIREC+0xc>
				}else{
				CLR_Bit(DIO_DDRD,pins[i].P);
			}
		}
	}
}
 2ac:	08 95       	ret

000002ae <Requestt>:
#include "dht11.h"
char c=0,I_RH,D_RH,I_Temp,D_Temp,CheckSum;

void Requestt()
{
	SET_BiT(DIO_DDRC,1);
 2ae:	a1 9a       	sbi	0x14, 1	; 20
	C1_CLEAR;	/* set to low pin */
 2b0:	a9 98       	cbi	0x15, 1	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b2:	2f ef       	ldi	r18, 0xFF	; 255
 2b4:	89 ef       	ldi	r24, 0xF9	; 249
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	21 50       	subi	r18, 0x01	; 1
 2ba:	80 40       	sbci	r24, 0x00	; 0
 2bc:	90 40       	sbci	r25, 0x00	; 0
 2be:	e1 f7       	brne	.-8      	; 0x2b8 <Requestt+0xa>
 2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <Requestt+0x14>
 2c2:	00 00       	nop
	_delay_ms(20);			/* wait for 20ms */
	C1_OUTPUT;
 2c4:	a9 9a       	sbi	0x15, 1	; 21
 2c6:	08 95       	ret

000002c8 <Responsee>:
}
void Responsee()
{
	CLR_Bit(DIO_DDRC,1);  //make pin input
 2c8:	a1 98       	cbi	0x14, 1	; 20
	while(C1_INPUT);      //wait for dht11 low pulse
 2ca:	99 99       	sbic	0x13, 1	; 19
 2cc:	fe cf       	rjmp	.-4      	; 0x2ca <Responsee+0x2>
	while(C1_INPUT==0);   //wait for dht11 high pulse
 2ce:	99 9b       	sbis	0x13, 1	; 19
 2d0:	fe cf       	rjmp	.-4      	; 0x2ce <Responsee+0x6>
	while(C1_INPUT);      //wait for dht11 low pulse
 2d2:	99 99       	sbic	0x13, 1	; 19
 2d4:	fe cf       	rjmp	.-4      	; 0x2d2 <Responsee+0xa>
}
 2d6:	08 95       	ret

000002d8 <Receive_dataa>:

TU08 Receive_dataa()			//receive data
{
 2d8:	88 e0       	ldi	r24, 0x08	; 8
 2da:	90 e0       	ldi	r25, 0x00	; 0
	for (int q=0; q<8; q++)
	{
		while(C1_INPUT == 0);  // check received bit 0 or 1
 2dc:	99 9b       	sbis	0x13, 1	; 19
 2de:	fe cf       	rjmp	.-4      	; 0x2dc <Receive_dataa+0x4>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2e0:	20 ea       	ldi	r18, 0xA0	; 160
 2e2:	2a 95       	dec	r18
 2e4:	f1 f7       	brne	.-4      	; 0x2e2 <Receive_dataa+0xa>
		_delay_us(30);
		if(C1_INPUT)           // if high pulse is greater than 30ms
 2e6:	99 9b       	sbis	0x13, 1	; 19
 2e8:	08 c0       	rjmp	.+16     	; 0x2fa <Receive_dataa+0x22>
		c = (c<<1)|(0x01);	   // then its logic HIGH
 2ea:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <__data_end>
 2ee:	22 0f       	add	r18, r18
 2f0:	33 0b       	sbc	r19, r19
 2f2:	21 60       	ori	r18, 0x01	; 1
 2f4:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <__data_end>
 2f8:	06 c0       	rjmp	.+12     	; 0x306 <Receive_dataa+0x2e>
		else			       // otherwise its logic LOW
		c = (c<<1);
 2fa:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <__data_end>
 2fe:	22 0f       	add	r18, r18
 300:	33 0b       	sbc	r19, r19
 302:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <__data_end>
		while(C1_INPUT);
 306:	99 99       	sbic	0x13, 1	; 19
 308:	fe cf       	rjmp	.-4      	; 0x306 <Receive_dataa+0x2e>
 30a:	01 97       	sbiw	r24, 0x01	; 1
	while(C1_INPUT);      //wait for dht11 low pulse
}

TU08 Receive_dataa()			//receive data
{
	for (int q=0; q<8; q++)
 30c:	39 f7       	brne	.-50     	; 0x2dc <Receive_dataa+0x4>
		else			       // otherwise its logic LOW
		c = (c<<1);
		while(C1_INPUT);
	}
	return c;
}
 30e:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__data_end>
 312:	08 95       	ret

00000314 <int_Dhtt>:
void int_Dhtt (void){
 314:	cf 93       	push	r28
 316:	df 93       	push	r29
 318:	00 d0       	rcall	.+0      	; 0x31a <int_Dhtt+0x6>
 31a:	00 d0       	rcall	.+0      	; 0x31c <int_Dhtt+0x8>
 31c:	1f 92       	push	r1
 31e:	cd b7       	in	r28, 0x3d	; 61
 320:	de b7       	in	r29, 0x3e	; 62
	char data[5];
	lcd_goto_xy(0,0);
 322:	60 e0       	ldi	r22, 0x00	; 0
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	17 d1       	rcall	.+558    	; 0x556 <lcd_goto_xy>
	lcd_write_word("Humidity =");
 328:	80 ee       	ldi	r24, 0xE0	; 224
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	fd d0       	rcall	.+506    	; 0x528 <lcd_write_word>
	lcd_goto_xy(1,0);
 32e:	60 e0       	ldi	r22, 0x00	; 0
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	11 d1       	rcall	.+546    	; 0x556 <lcd_goto_xy>
	lcd_write_word("Temp =");
 334:	8b ee       	ldi	r24, 0xEB	; 235
 336:	90 e0       	ldi	r25, 0x00	; 0
	Requestt();		           // send start pulse
 338:	f7 d0       	rcall	.+494    	; 0x528 <lcd_write_word>
	Responsee();		       // receive response
 33a:	b9 df       	rcall	.-142    	; 0x2ae <Requestt>
 33c:	c5 df       	rcall	.-118    	; 0x2c8 <Responsee>
	I_RH=Receive_dataa();	   // store first eight bit in I_RH
 33e:	cc df       	rcall	.-104    	; 0x2d8 <Receive_dataa>
 340:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <I_RH>
	D_RH=Receive_dataa();	   // store next eight bit in D_RH
 344:	c9 df       	rcall	.-110    	; 0x2d8 <Receive_dataa>
 346:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <D_RH>
	I_Temp=Receive_dataa();	   // store next eight bit in I_Temp
 34a:	c6 df       	rcall	.-116    	; 0x2d8 <Receive_dataa>
 34c:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <I_Temp>
 350:	c3 df       	rcall	.-122    	; 0x2d8 <Receive_dataa>
	D_Temp=Receive_dataa();	   // store next eight bit in D_Temp
 352:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <D_Temp>
 356:	c0 df       	rcall	.-128    	; 0x2d8 <Receive_dataa>
 358:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <CheckSum>
	CheckSum=Receive_dataa();  // store next eight bit in CheckSum
 35c:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <I_RH>
 360:	0e 2e       	mov	r0, r30
	if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum)
 362:	00 0c       	add	r0, r0
 364:	ff 0b       	sbc	r31, r31
 366:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <D_RH>
 36a:	9f 01       	movw	r18, r30
 36c:	29 0f       	add	r18, r25
 36e:	31 1d       	adc	r19, r1
 370:	97 fd       	sbrc	r25, 7
 372:	3a 95       	dec	r19
 374:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <I_Temp>
 378:	29 0f       	add	r18, r25
 37a:	31 1d       	adc	r19, r1
 37c:	97 fd       	sbrc	r25, 7
 37e:	3a 95       	dec	r19
 380:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <D_Temp>
 384:	29 0f       	add	r18, r25
 386:	31 1d       	adc	r19, r1
 388:	97 fd       	sbrc	r25, 7
 38a:	3a 95       	dec	r19
 38c:	48 2f       	mov	r20, r24
 38e:	88 0f       	add	r24, r24
 390:	55 0b       	sbc	r21, r21
 392:	24 17       	cp	r18, r20
 394:	35 07       	cpc	r19, r21
 396:	39 f0       	breq	.+14     	; 0x3a6 <int_Dhtt+0x92>
 398:	60 e0       	ldi	r22, 0x00	; 0
	{
		lcd_goto_xy(0,0);
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	dc d0       	rcall	.+440    	; 0x556 <lcd_goto_xy>
 39e:	82 ef       	ldi	r24, 0xF2	; 242
		lcd_write_word("Error");
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	c2 d0       	rcall	.+388    	; 0x528 <lcd_write_word>
 3a4:	45 c0       	rjmp	.+138    	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 3a6:	4a e0       	ldi	r20, 0x0A	; 10
 3a8:	be 01       	movw	r22, r28
 3aa:	6f 5f       	subi	r22, 0xFF	; 255
 3ac:	7f 4f       	sbci	r23, 0xFF	; 255
 3ae:	cf 01       	movw	r24, r30
 3b0:	49 d3       	rcall	.+1682   	; 0xa44 <__itoa_ncheck>
	}
	
	else
	{
		itoa(I_RH,data,10);
		lcd_goto_xy(0,11);
 3b2:	6b e0       	ldi	r22, 0x0B	; 11
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	cf d0       	rcall	.+414    	; 0x556 <lcd_goto_xy>
 3b8:	ce 01       	movw	r24, r28
		lcd_write_word(data);
 3ba:	01 96       	adiw	r24, 0x01	; 1
 3bc:	b5 d0       	rcall	.+362    	; 0x528 <lcd_write_word>
 3be:	88 ef       	ldi	r24, 0xF8	; 248
		lcd_write_word(".");
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	b2 d0       	rcall	.+356    	; 0x528 <lcd_write_word>
 3c4:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <D_RH>
 3c8:	4a e0       	ldi	r20, 0x0A	; 10
 3ca:	be 01       	movw	r22, r28
 3cc:	6f 5f       	subi	r22, 0xFF	; 255
 3ce:	7f 4f       	sbci	r23, 0xFF	; 255
 3d0:	08 2e       	mov	r0, r24
 3d2:	00 0c       	add	r0, r0
 3d4:	99 0b       	sbc	r25, r25
 3d6:	36 d3       	rcall	.+1644   	; 0xa44 <__itoa_ncheck>
 3d8:	ce 01       	movw	r24, r28
		
		itoa(D_RH,data,10);
		lcd_write_word(data);
 3da:	01 96       	adiw	r24, 0x01	; 1
 3dc:	a5 d0       	rcall	.+330    	; 0x528 <lcd_write_word>
 3de:	8a ef       	ldi	r24, 0xFA	; 250
		lcd_write_word("%");
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	a2 d0       	rcall	.+324    	; 0x528 <lcd_write_word>
 3e4:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <I_Temp>
 3e8:	4a e0       	ldi	r20, 0x0A	; 10
 3ea:	be 01       	movw	r22, r28
 3ec:	6f 5f       	subi	r22, 0xFF	; 255
 3ee:	7f 4f       	sbci	r23, 0xFF	; 255
 3f0:	08 2e       	mov	r0, r24
 3f2:	00 0c       	add	r0, r0
 3f4:	99 0b       	sbc	r25, r25
 3f6:	26 d3       	rcall	.+1612   	; 0xa44 <__itoa_ncheck>
 3f8:	67 e0       	ldi	r22, 0x07	; 7

		itoa(I_Temp,data,10);
		lcd_goto_xy(1,7);
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	ac d0       	rcall	.+344    	; 0x556 <lcd_goto_xy>
 3fe:	ce 01       	movw	r24, r28
		lcd_write_word(data);
 400:	01 96       	adiw	r24, 0x01	; 1
 402:	92 d0       	rcall	.+292    	; 0x528 <lcd_write_word>
 404:	88 ef       	ldi	r24, 0xF8	; 248
		lcd_write_word(".");
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	8f d0       	rcall	.+286    	; 0x528 <lcd_write_word>
 40a:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <D_Temp>
 40e:	4a e0       	ldi	r20, 0x0A	; 10
 410:	be 01       	movw	r22, r28
 412:	6f 5f       	subi	r22, 0xFF	; 255
 414:	7f 4f       	sbci	r23, 0xFF	; 255
 416:	08 2e       	mov	r0, r24
 418:	00 0c       	add	r0, r0
 41a:	99 0b       	sbc	r25, r25
 41c:	13 d3       	rcall	.+1574   	; 0xa44 <__itoa_ncheck>
 41e:	ce 01       	movw	r24, r28
 420:	01 96       	adiw	r24, 0x01	; 1
 422:	82 d0       	rcall	.+260    	; 0x528 <lcd_write_word>
		
		itoa(D_Temp,data,10);
		lcd_write_word(data);
 424:	8c ef       	ldi	r24, 0xFC	; 252
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	7f d0       	rcall	.+254    	; 0x528 <lcd_write_word>
 42a:	6c e0       	ldi	r22, 0x0C	; 12
		lcd_write_word("C ");
 42c:	81 e0       	ldi	r24, 0x01	; 1
 42e:	9f d0       	rcall	.+318    	; 0x56e <lcd_set_courser>
 430:	0f 90       	pop	r0
 432:	0f 90       	pop	r0
		lcd_set_courser(1,12);
 434:	0f 90       	pop	r0
 436:	0f 90       	pop	r0
 438:	0f 90       	pop	r0
 43a:	df 91       	pop	r29
	}
 43c:	cf 91       	pop	r28
 43e:	08 95       	ret

00000440 <lcd_send_command>:
*				 		the first nibble then the second nibble
*						enabling and disabling the LCD in between
*/
void lcd_send_command (TU08 command)
{
	DATA_BUS=((command&0b11110000));
 440:	98 2f       	mov	r25, r24
 442:	90 7f       	andi	r25, 0xF0	; 240
 444:	9b bb       	out	0x1b, r25	; 27
	CTL_BUS &=~(1<<LCD_RS);
 446:	c1 98       	cbi	0x18, 1	; 24
	CTL_BUS |=(1<<LCD_EN);
 448:	c3 9a       	sbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 44a:	e1 ee       	ldi	r30, 0xE1	; 225
 44c:	f4 e0       	ldi	r31, 0x04	; 4
 44e:	31 97       	sbiw	r30, 0x01	; 1
 450:	f1 f7       	brne	.-4      	; 0x44e <lcd_send_command+0xe>
 452:	00 c0       	rjmp	.+0      	; 0x454 <lcd_send_command+0x14>
 454:	00 00       	nop
	_delay_ms(5);
	CTL_BUS &=~(1<<LCD_EN);
 456:	c3 98       	cbi	0x18, 3	; 24
 458:	e1 ee       	ldi	r30, 0xE1	; 225
 45a:	f4 e0       	ldi	r31, 0x04	; 4
 45c:	31 97       	sbiw	r30, 0x01	; 1
 45e:	f1 f7       	brne	.-4      	; 0x45c <lcd_send_command+0x1c>
 460:	00 c0       	rjmp	.+0      	; 0x462 <lcd_send_command+0x22>
 462:	00 00       	nop
	_delay_ms(5);
	DATA_BUS=((command&0b00001111)<<4);
 464:	f0 e1       	ldi	r31, 0x10	; 16
 466:	8f 9f       	mul	r24, r31
 468:	c0 01       	movw	r24, r0
 46a:	11 24       	eor	r1, r1
 46c:	8b bb       	out	0x1b, r24	; 27
	CTL_BUS |=(1<<LCD_EN);
 46e:	c3 9a       	sbi	0x18, 3	; 24
 470:	81 ee       	ldi	r24, 0xE1	; 225
 472:	94 e0       	ldi	r25, 0x04	; 4
 474:	01 97       	sbiw	r24, 0x01	; 1
 476:	f1 f7       	brne	.-4      	; 0x474 <lcd_send_command+0x34>
 478:	00 c0       	rjmp	.+0      	; 0x47a <lcd_send_command+0x3a>
 47a:	00 00       	nop
	_delay_ms(5);
	CTL_BUS &=~(1<<LCD_EN);
 47c:	c3 98       	cbi	0x18, 3	; 24
 47e:	e1 ee       	ldi	r30, 0xE1	; 225
 480:	f4 e0       	ldi	r31, 0x04	; 4
 482:	31 97       	sbiw	r30, 0x01	; 1
 484:	f1 f7       	brne	.-4      	; 0x482 <lcd_send_command+0x42>
 486:	00 c0       	rjmp	.+0      	; 0x488 <lcd_send_command+0x48>
 488:	00 00       	nop
 48a:	08 95       	ret

0000048c <lcd_init>:
 */ 
#include "LCD.h"
void lcd_init(void)
{

	DATA_DDR = (1<<LCD_D7) | (1<<LCD_D6) | (1<<LCD_D5)| (1<<LCD_D4);
 48c:	80 ef       	ldi	r24, 0xF0	; 240
 48e:	8a bb       	out	0x1a, r24	; 26
	CTL_DDR |= (1<<LCD_EN)|(1<<LCD_RW)|(1<<LCD_RS);
 490:	87 b3       	in	r24, 0x17	; 23
 492:	8e 60       	ori	r24, 0x0E	; 14
 494:	87 bb       	out	0x17, r24	; 23

	DATA_BUS = (0<<LCD_D7)|(0<<LCD_D6)|(1<<LCD_D5)|(0<<LCD_D4);
 496:	80 e2       	ldi	r24, 0x20	; 32
 498:	8b bb       	out	0x1b, r24	; 27
	CTL_BUS|= (1<<LCD_EN)|(0<<LCD_RW)|(0<<LCD_RS);
 49a:	c3 9a       	sbi	0x18, 3	; 24
 49c:	81 ee       	ldi	r24, 0xE1	; 225
 49e:	94 e0       	ldi	r25, 0x04	; 4
 4a0:	01 97       	sbiw	r24, 0x01	; 1
 4a2:	f1 f7       	brne	.-4      	; 0x4a0 <lcd_init+0x14>
 4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <lcd_init+0x1a>
 4a6:	00 00       	nop

	_delay_ms(5);
	CTL_BUS &=~(1<<LCD_EN);
 4a8:	c3 98       	cbi	0x18, 3	; 24
 4aa:	81 ee       	ldi	r24, 0xE1	; 225
 4ac:	94 e0       	ldi	r25, 0x04	; 4
 4ae:	01 97       	sbiw	r24, 0x01	; 1
 4b0:	f1 f7       	brne	.-4      	; 0x4ae <lcd_init+0x22>
 4b2:	00 c0       	rjmp	.+0      	; 0x4b4 <lcd_init+0x28>
 4b4:	00 00       	nop
	_delay_ms(5);

	lcd_send_command(LCD_CMD_4BIT_2ROW_5X7);
 4b6:	88 e2       	ldi	r24, 0x28	; 40
 4b8:	c3 df       	rcall	.-122    	; 0x440 <lcd_send_command>
 4ba:	81 ee       	ldi	r24, 0xE1	; 225
 4bc:	94 e0       	ldi	r25, 0x04	; 4
 4be:	01 97       	sbiw	r24, 0x01	; 1
 4c0:	f1 f7       	brne	.-4      	; 0x4be <lcd_init+0x32>
 4c2:	00 c0       	rjmp	.+0      	; 0x4c4 <lcd_init+0x38>
 4c4:	00 00       	nop
	_delay_ms(5);
	lcd_send_command( LCD_CMD_DISPLAY_NO_CURSOR);
 4c6:	8c e0       	ldi	r24, 0x0C	; 12
 4c8:	bb df       	rcall	.-138    	; 0x440 <lcd_send_command>
 4ca:	81 ee       	ldi	r24, 0xE1	; 225
 4cc:	94 e0       	ldi	r25, 0x04	; 4
 4ce:	01 97       	sbiw	r24, 0x01	; 1
 4d0:	f1 f7       	brne	.-4      	; 0x4ce <lcd_init+0x42>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <lcd_init+0x48>
	_delay_ms(5);
	lcd_send_command(0x80);
 4d4:	00 00       	nop
 4d6:	80 e8       	ldi	r24, 0x80	; 128
 4d8:	b3 cf       	rjmp	.-154    	; 0x440 <lcd_send_command>
 4da:	08 95       	ret

000004dc <lcd_write_character>:
*						 enabling and disabling the LCD in between
*/
void lcd_write_character(TU08 character)
{

	DATA_BUS=((character & 0b11110000));
 4dc:	98 2f       	mov	r25, r24
 4de:	90 7f       	andi	r25, 0xF0	; 240
 4e0:	9b bb       	out	0x1b, r25	; 27
	CTL_BUS|=(1<<LCD_RS);
 4e2:	c1 9a       	sbi	0x18, 1	; 24
	CTL_BUS |=(1<<LCD_EN);
 4e4:	c3 9a       	sbi	0x18, 3	; 24
 4e6:	e1 ee       	ldi	r30, 0xE1	; 225
 4e8:	f4 e0       	ldi	r31, 0x04	; 4
 4ea:	31 97       	sbiw	r30, 0x01	; 1
 4ec:	f1 f7       	brne	.-4      	; 0x4ea <lcd_write_character+0xe>
 4ee:	00 c0       	rjmp	.+0      	; 0x4f0 <lcd_write_character+0x14>
 4f0:	00 00       	nop
	_delay_ms(5);
	CTL_BUS &=~(1<<LCD_EN);
 4f2:	c3 98       	cbi	0x18, 3	; 24
 4f4:	e1 ee       	ldi	r30, 0xE1	; 225
 4f6:	f4 e0       	ldi	r31, 0x04	; 4
 4f8:	31 97       	sbiw	r30, 0x01	; 1
 4fa:	f1 f7       	brne	.-4      	; 0x4f8 <lcd_write_character+0x1c>
 4fc:	00 c0       	rjmp	.+0      	; 0x4fe <lcd_write_character+0x22>
 4fe:	00 00       	nop
	_delay_ms(5);
	DATA_BUS=((character & 0b00001111)<<4);
 500:	f0 e1       	ldi	r31, 0x10	; 16
 502:	8f 9f       	mul	r24, r31
 504:	c0 01       	movw	r24, r0
 506:	11 24       	eor	r1, r1
 508:	8b bb       	out	0x1b, r24	; 27
	CTL_BUS |=(1<<LCD_EN);
 50a:	c3 9a       	sbi	0x18, 3	; 24
 50c:	81 ee       	ldi	r24, 0xE1	; 225
 50e:	94 e0       	ldi	r25, 0x04	; 4
 510:	01 97       	sbiw	r24, 0x01	; 1
 512:	f1 f7       	brne	.-4      	; 0x510 <lcd_write_character+0x34>
 514:	00 c0       	rjmp	.+0      	; 0x516 <lcd_write_character+0x3a>
 516:	00 00       	nop
	_delay_ms(5);
	CTL_BUS &=~(1<<LCD_EN);
 518:	c3 98       	cbi	0x18, 3	; 24
 51a:	e1 ee       	ldi	r30, 0xE1	; 225
 51c:	f4 e0       	ldi	r31, 0x04	; 4
 51e:	31 97       	sbiw	r30, 0x01	; 1
 520:	f1 f7       	brne	.-4      	; 0x51e <lcd_write_character+0x42>
 522:	00 c0       	rjmp	.+0      	; 0x524 <lcd_write_character+0x48>
 524:	00 00       	nop
 526:	08 95       	ret

00000528 <lcd_write_word>:
*return		   		: void
*purpose       	: printing a full word to the
*				 		LCD (Maximun 20 characters)
*/
void lcd_write_word(char word[20])
{
 528:	cf 93       	push	r28
 52a:	df 93       	push	r29
 52c:	ec 01       	movw	r28, r24
	int i=0;
	while(word[i]!='\0')
 52e:	88 81       	ld	r24, Y
 530:	88 23       	and	r24, r24
 532:	29 f0       	breq	.+10     	; 0x53e <lcd_write_word+0x16>
 534:	21 96       	adiw	r28, 0x01	; 1
	{
		lcd_write_character(word[i]);
 536:	d2 df       	rcall	.-92     	; 0x4dc <lcd_write_character>
*				 		LCD (Maximun 20 characters)
*/
void lcd_write_word(char word[20])
{
	int i=0;
	while(word[i]!='\0')
 538:	89 91       	ld	r24, Y+
 53a:	81 11       	cpse	r24, r1
 53c:	fc cf       	rjmp	.-8      	; 0x536 <lcd_write_word+0xe>
	{
		lcd_write_character(word[i]);
		i++;
	}
}
 53e:	df 91       	pop	r29
 540:	cf 91       	pop	r28
 542:	08 95       	ret

00000544 <lcd_clear>:
*purpose       	: Clearing the lcd screen by sending
*				 	the LCD_CMD_CLEAR_DISPLAY command to LCD
*/
void lcd_clear(void)
{
	lcd_send_command(LCD_CMD_CLEAR_DISPLAY);
 544:	81 e0       	ldi	r24, 0x01	; 1
 546:	7c df       	rcall	.-264    	; 0x440 <lcd_send_command>
 548:	81 ee       	ldi	r24, 0xE1	; 225
 54a:	94 e0       	ldi	r25, 0x04	; 4
 54c:	01 97       	sbiw	r24, 0x01	; 1
 54e:	f1 f7       	brne	.-4      	; 0x54c <lcd_clear+0x8>
 550:	00 c0       	rjmp	.+0      	; 0x552 <lcd_clear+0xe>
 552:	00 00       	nop
 554:	08 95       	ret

00000556 <lcd_goto_xy>:
	_delay_ms(5);
}
void lcd_goto_xy (TU08 line,TU08 pos)				//line = 0 or 1
{
	lcd_send_command((0x80|(line<<6))+pos);
 556:	20 e4       	ldi	r18, 0x40	; 64
 558:	82 9f       	mul	r24, r18
 55a:	c0 01       	movw	r24, r0
 55c:	11 24       	eor	r1, r1
 55e:	80 68       	ori	r24, 0x80	; 128
 560:	86 0f       	add	r24, r22
 562:	6e df       	rcall	.-292    	; 0x440 <lcd_send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 564:	80 e1       	ldi	r24, 0x10	; 16
 566:	8a 95       	dec	r24
 568:	f1 f7       	brne	.-4      	; 0x566 <lcd_goto_xy+0x10>
 56a:	00 c0       	rjmp	.+0      	; 0x56c <lcd_goto_xy+0x16>
 56c:	08 95       	ret

0000056e <lcd_set_courser>:
	_delay_us (50);
}
void lcd_set_courser(TU08 line ,TU08 pos){
	lcd_send_command((0x80|(line<<6))+pos);
 56e:	20 e4       	ldi	r18, 0x40	; 64
 570:	82 9f       	mul	r24, r18
 572:	c0 01       	movw	r24, r0
 574:	11 24       	eor	r1, r1
 576:	80 68       	ori	r24, 0x80	; 128
 578:	86 0f       	add	r24, r22
 57a:	62 df       	rcall	.-316    	; 0x440 <lcd_send_command>
 57c:	80 e1       	ldi	r24, 0x10	; 16
 57e:	8a 95       	dec	r24
 580:	f1 f7       	brne	.-4      	; 0x57e <lcd_set_courser+0x10>
 582:	00 c0       	rjmp	.+0      	; 0x584 <lcd_set_courser+0x16>
 584:	08 95       	ret

00000586 <main>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 586:	2f ef       	ldi	r18, 0xFF	; 255
 588:	87 ea       	ldi	r24, 0xA7	; 167
 58a:	91 e6       	ldi	r25, 0x61	; 97
 58c:	21 50       	subi	r18, 0x01	; 1
 58e:	80 40       	sbci	r24, 0x00	; 0
 590:	90 40       	sbci	r25, 0x00	; 0
 592:	e1 f7       	brne	.-8      	; 0x58c <main+0x6>
 594:	00 c0       	rjmp	.+0      	; 0x596 <main+0x10>
 596:	00 00       	nop


int main(void)
{
	_delay_ms(2000);
	DIREC();
 598:	0a de       	rcall	.-1004   	; 0x1ae <DIREC>
	lcd_init();
 59a:	78 df       	rcall	.-272    	; 0x48c <lcd_init>
	adc_init();
 59c:	f4 dd       	rcall	.-1048   	; 0x186 <adc_init>
	lcd_clear();
 59e:	d2 df       	rcall	.-92     	; 0x544 <lcd_clear>
 5a0:	01 c0       	rjmp	.+2      	; 0x5a4 <main+0x1e>
    while (1) 
    {
		while (C4_INPUT ==1){
		    int_Dhtt();
 5a2:	b8 de       	rcall	.-656    	; 0x314 <int_Dhtt>
 5a4:	9c 99       	sbic	0x13, 4	; 19
	lcd_init();
	adc_init();
	lcd_clear();
    while (1) 
    {
		while (C4_INPUT ==1){
 5a6:	fd cf       	rjmp	.-6      	; 0x5a2 <main+0x1c>
		    int_Dhtt();
		}
		lcd_clear();
 5a8:	cd df       	rcall	.-102    	; 0x544 <lcd_clear>
 5aa:	9a 9b       	sbis	0x13, 2	; 19
		while (C2_INPUT ==1){
 5ac:	04 c0       	rjmp	.+8      	; 0x5b6 <main+0x30>
        	soil();
 5ae:	1b d0       	rcall	.+54     	; 0x5e6 <soil>
 5b0:	04 d0       	rcall	.+8      	; 0x5ba <rain>
			rain();
 5b2:	9a 99       	sbic	0x13, 2	; 19
 5b4:	fc cf       	rjmp	.-8      	; 0x5ae <main+0x28>
    {
		while (C4_INPUT ==1){
		    int_Dhtt();
		}
		lcd_clear();
		while (C2_INPUT ==1){
 5b6:	c6 df       	rcall	.-116    	; 0x544 <lcd_clear>
 5b8:	f5 cf       	rjmp	.-22     	; 0x5a4 <main+0x1e>

000005ba <rain>:
 *  Author: Mina
 */ 
#include "rain.h"

void rain(void){
	lcd_goto_xy(1,0);
 5ba:	60 e0       	ldi	r22, 0x00	; 0
 5bc:	81 e0       	ldi	r24, 0x01	; 1
 5be:	cb df       	rcall	.-106    	; 0x556 <lcd_goto_xy>
	lcd_write_word("Rain:");
 5c0:	8f ef       	ldi	r24, 0xFF	; 255
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	b1 df       	rcall	.-158    	; 0x528 <lcd_write_word>
	if (GET_Bit(DIO_PINC,0)==1){
 5c6:	98 9b       	sbis	0x13, 0	; 19
 5c8:	07 c0       	rjmp	.+14     	; 0x5d8 <rain+0x1e>
		lcd_goto_xy(1,6);
 5ca:	66 e0       	ldi	r22, 0x06	; 6
 5cc:	81 e0       	ldi	r24, 0x01	; 1
 5ce:	c3 df       	rcall	.-122    	; 0x556 <lcd_goto_xy>
		lcd_write_word("Raining");
 5d0:	85 e0       	ldi	r24, 0x05	; 5
 5d2:	91 e0       	ldi	r25, 0x01	; 1
 5d4:	a9 cf       	rjmp	.-174    	; 0x528 <lcd_write_word>
 5d6:	08 95       	ret
		}else{
		lcd_goto_xy(1,6);
 5d8:	66 e0       	ldi	r22, 0x06	; 6
 5da:	81 e0       	ldi	r24, 0x01	; 1
 5dc:	bc df       	rcall	.-136    	; 0x556 <lcd_goto_xy>
		lcd_write_word("No Rain");
 5de:	8d e0       	ldi	r24, 0x0D	; 13
 5e0:	91 e0       	ldi	r25, 0x01	; 1
 5e2:	a2 cf       	rjmp	.-188    	; 0x528 <lcd_write_word>
 5e4:	08 95       	ret

000005e6 <soil>:
 5e6:	ef 92       	push	r14
 *
 * Created: 12/25/2022 10:29:53 AM
 *  Author: Mina
 */ 
#include "soil.h"
void soil(void){
 5e8:	ff 92       	push	r15
 5ea:	0f 93       	push	r16
 5ec:	1f 93       	push	r17
 5ee:	cf 93       	push	r28
 5f0:	df 93       	push	r29
 5f2:	cd b7       	in	r28, 0x3d	; 61
 5f4:	de b7       	in	r29, 0x3e	; 62
 5f6:	2a 97       	sbiw	r28, 0x0a	; 10
 5f8:	0f b6       	in	r0, 0x3f	; 63
 5fa:	f8 94       	cli
 5fc:	de bf       	out	0x3e, r29	; 62
 5fe:	0f be       	out	0x3f, r0	; 63
 600:	cd bf       	out	0x3d, r28	; 61
	TU16 adc_value;
	float moisture;
	char array[10];
	adc_value = ADC_READ(1);
 602:	81 e0       	ldi	r24, 0x01	; 1
 604:	c7 dd       	rcall	.-1138   	; 0x194 <ADC_READ>
 606:	7c 01       	movw	r14, r24
	moisture = 100-(adc_value*100.00)/1023.00;
	lcd_goto_xy(0,0);
 608:	60 e0       	ldi	r22, 0x00	; 0
 60a:	80 e0       	ldi	r24, 0x00	; 0
 60c:	a4 df       	rcall	.-184    	; 0x556 <lcd_goto_xy>
	lcd_write_word("Moisture:");
 60e:	85 e1       	ldi	r24, 0x15	; 21
 610:	91 e0       	ldi	r25, 0x01	; 1
 612:	8a df       	rcall	.-236    	; 0x528 <lcd_write_word>
	dtostrf(moisture,3,2,array);  //turn float to string dtostrf(float_value, min_width, num_digits_after_decimal, where_to_store_string)
 614:	b7 01       	movw	r22, r14
 616:	80 e0       	ldi	r24, 0x00	; 0
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	04 d1       	rcall	.+520    	; 0x824 <__floatunsisf>
 61c:	20 e0       	ldi	r18, 0x00	; 0
 61e:	30 e0       	ldi	r19, 0x00	; 0
 620:	48 ec       	ldi	r20, 0xC8	; 200
 622:	52 e4       	ldi	r21, 0x42	; 66
 624:	8d d1       	rcall	.+794    	; 0x940 <__mulsf3>
 626:	20 e0       	ldi	r18, 0x00	; 0
 628:	30 ec       	ldi	r19, 0xC0	; 192
 62a:	4f e7       	ldi	r20, 0x7F	; 127
 62c:	54 e4       	ldi	r21, 0x44	; 68
 62e:	92 d0       	rcall	.+292    	; 0x754 <__divsf3>
 630:	9b 01       	movw	r18, r22
 632:	ac 01       	movw	r20, r24
 634:	60 e0       	ldi	r22, 0x00	; 0
 636:	70 e0       	ldi	r23, 0x00	; 0
 638:	88 ec       	ldi	r24, 0xC8	; 200
 63a:	92 e4       	ldi	r25, 0x42	; 66
 63c:	26 d0       	rcall	.+76     	; 0x68a <__subsf3>
 63e:	9e 01       	movw	r18, r28
 640:	2f 5f       	subi	r18, 0xFF	; 255
 642:	3f 4f       	sbci	r19, 0xFF	; 255
 644:	79 01       	movw	r14, r18
 646:	89 01       	movw	r16, r18
 648:	22 e0       	ldi	r18, 0x02	; 2
 64a:	43 e0       	ldi	r20, 0x03	; 3
 64c:	dc d1       	rcall	.+952    	; 0xa06 <dtostrf>
	strcat(array,"%   ");  //join to string
 64e:	d7 01       	movw	r26, r14
 650:	0d 90       	ld	r0, X+
 652:	00 20       	and	r0, r0
 654:	e9 f7       	brne	.-6      	; 0x650 <soil+0x6a>
 656:	11 97       	sbiw	r26, 0x01	; 1
 658:	85 e0       	ldi	r24, 0x05	; 5
 65a:	ef e1       	ldi	r30, 0x1F	; 31
 65c:	f1 e0       	ldi	r31, 0x01	; 1
 65e:	01 90       	ld	r0, Z+
 660:	0d 92       	st	X+, r0
	lcd_goto_xy(0,10);
 662:	8a 95       	dec	r24
 664:	e1 f7       	brne	.-8      	; 0x65e <soil+0x78>
 666:	6a e0       	ldi	r22, 0x0A	; 10
 668:	80 e0       	ldi	r24, 0x00	; 0
	lcd_write_word(array);
 66a:	75 df       	rcall	.-278    	; 0x556 <lcd_goto_xy>
 66c:	c7 01       	movw	r24, r14
 66e:	5c df       	rcall	.-328    	; 0x528 <lcd_write_word>
	memset(array,0,10); //fill block of memory
}
 670:	2a 96       	adiw	r28, 0x0a	; 10
 672:	0f b6       	in	r0, 0x3f	; 63
 674:	f8 94       	cli
 676:	de bf       	out	0x3e, r29	; 62
 678:	0f be       	out	0x3f, r0	; 63
 67a:	cd bf       	out	0x3d, r28	; 61
 67c:	df 91       	pop	r29
 67e:	cf 91       	pop	r28
 680:	1f 91       	pop	r17
 682:	0f 91       	pop	r16
 684:	ff 90       	pop	r15
 686:	ef 90       	pop	r14
 688:	08 95       	ret

0000068a <__subsf3>:
 68a:	50 58       	subi	r21, 0x80	; 128

0000068c <__addsf3>:
 68c:	bb 27       	eor	r27, r27
 68e:	aa 27       	eor	r26, r26
 690:	0e d0       	rcall	.+28     	; 0x6ae <__addsf3x>
 692:	1c c1       	rjmp	.+568    	; 0x8cc <__fp_round>
 694:	0d d1       	rcall	.+538    	; 0x8b0 <__fp_pscA>
 696:	30 f0       	brcs	.+12     	; 0x6a4 <__addsf3+0x18>
 698:	12 d1       	rcall	.+548    	; 0x8be <__fp_pscB>
 69a:	20 f0       	brcs	.+8      	; 0x6a4 <__addsf3+0x18>
 69c:	31 f4       	brne	.+12     	; 0x6aa <__addsf3+0x1e>
 69e:	9f 3f       	cpi	r25, 0xFF	; 255
 6a0:	11 f4       	brne	.+4      	; 0x6a6 <__addsf3+0x1a>
 6a2:	1e f4       	brtc	.+6      	; 0x6aa <__addsf3+0x1e>
 6a4:	02 c1       	rjmp	.+516    	; 0x8aa <__fp_nan>
 6a6:	0e f4       	brtc	.+2      	; 0x6aa <__addsf3+0x1e>
 6a8:	e0 95       	com	r30
 6aa:	e7 fb       	bst	r30, 7
 6ac:	f8 c0       	rjmp	.+496    	; 0x89e <__fp_inf>

000006ae <__addsf3x>:
 6ae:	e9 2f       	mov	r30, r25
 6b0:	1e d1       	rcall	.+572    	; 0x8ee <__fp_split3>
 6b2:	80 f3       	brcs	.-32     	; 0x694 <__addsf3+0x8>
 6b4:	ba 17       	cp	r27, r26
 6b6:	62 07       	cpc	r22, r18
 6b8:	73 07       	cpc	r23, r19
 6ba:	84 07       	cpc	r24, r20
 6bc:	95 07       	cpc	r25, r21
 6be:	18 f0       	brcs	.+6      	; 0x6c6 <__addsf3x+0x18>
 6c0:	71 f4       	brne	.+28     	; 0x6de <__addsf3x+0x30>
 6c2:	9e f5       	brtc	.+102    	; 0x72a <__addsf3x+0x7c>
 6c4:	36 c1       	rjmp	.+620    	; 0x932 <__fp_zero>
 6c6:	0e f4       	brtc	.+2      	; 0x6ca <__addsf3x+0x1c>
 6c8:	e0 95       	com	r30
 6ca:	0b 2e       	mov	r0, r27
 6cc:	ba 2f       	mov	r27, r26
 6ce:	a0 2d       	mov	r26, r0
 6d0:	0b 01       	movw	r0, r22
 6d2:	b9 01       	movw	r22, r18
 6d4:	90 01       	movw	r18, r0
 6d6:	0c 01       	movw	r0, r24
 6d8:	ca 01       	movw	r24, r20
 6da:	a0 01       	movw	r20, r0
 6dc:	11 24       	eor	r1, r1
 6de:	ff 27       	eor	r31, r31
 6e0:	59 1b       	sub	r21, r25
 6e2:	99 f0       	breq	.+38     	; 0x70a <__addsf3x+0x5c>
 6e4:	59 3f       	cpi	r21, 0xF9	; 249
 6e6:	50 f4       	brcc	.+20     	; 0x6fc <__addsf3x+0x4e>
 6e8:	50 3e       	cpi	r21, 0xE0	; 224
 6ea:	68 f1       	brcs	.+90     	; 0x746 <__addsf3x+0x98>
 6ec:	1a 16       	cp	r1, r26
 6ee:	f0 40       	sbci	r31, 0x00	; 0
 6f0:	a2 2f       	mov	r26, r18
 6f2:	23 2f       	mov	r18, r19
 6f4:	34 2f       	mov	r19, r20
 6f6:	44 27       	eor	r20, r20
 6f8:	58 5f       	subi	r21, 0xF8	; 248
 6fa:	f3 cf       	rjmp	.-26     	; 0x6e2 <__addsf3x+0x34>
 6fc:	46 95       	lsr	r20
 6fe:	37 95       	ror	r19
 700:	27 95       	ror	r18
 702:	a7 95       	ror	r26
 704:	f0 40       	sbci	r31, 0x00	; 0
 706:	53 95       	inc	r21
 708:	c9 f7       	brne	.-14     	; 0x6fc <__addsf3x+0x4e>
 70a:	7e f4       	brtc	.+30     	; 0x72a <__addsf3x+0x7c>
 70c:	1f 16       	cp	r1, r31
 70e:	ba 0b       	sbc	r27, r26
 710:	62 0b       	sbc	r22, r18
 712:	73 0b       	sbc	r23, r19
 714:	84 0b       	sbc	r24, r20
 716:	ba f0       	brmi	.+46     	; 0x746 <__addsf3x+0x98>
 718:	91 50       	subi	r25, 0x01	; 1
 71a:	a1 f0       	breq	.+40     	; 0x744 <__addsf3x+0x96>
 71c:	ff 0f       	add	r31, r31
 71e:	bb 1f       	adc	r27, r27
 720:	66 1f       	adc	r22, r22
 722:	77 1f       	adc	r23, r23
 724:	88 1f       	adc	r24, r24
 726:	c2 f7       	brpl	.-16     	; 0x718 <__addsf3x+0x6a>
 728:	0e c0       	rjmp	.+28     	; 0x746 <__addsf3x+0x98>
 72a:	ba 0f       	add	r27, r26
 72c:	62 1f       	adc	r22, r18
 72e:	73 1f       	adc	r23, r19
 730:	84 1f       	adc	r24, r20
 732:	48 f4       	brcc	.+18     	; 0x746 <__addsf3x+0x98>
 734:	87 95       	ror	r24
 736:	77 95       	ror	r23
 738:	67 95       	ror	r22
 73a:	b7 95       	ror	r27
 73c:	f7 95       	ror	r31
 73e:	9e 3f       	cpi	r25, 0xFE	; 254
 740:	08 f0       	brcs	.+2      	; 0x744 <__addsf3x+0x96>
 742:	b3 cf       	rjmp	.-154    	; 0x6aa <__addsf3+0x1e>
 744:	93 95       	inc	r25
 746:	88 0f       	add	r24, r24
 748:	08 f0       	brcs	.+2      	; 0x74c <__addsf3x+0x9e>
 74a:	99 27       	eor	r25, r25
 74c:	ee 0f       	add	r30, r30
 74e:	97 95       	ror	r25
 750:	87 95       	ror	r24
 752:	08 95       	ret

00000754 <__divsf3>:
 754:	0c d0       	rcall	.+24     	; 0x76e <__divsf3x>
 756:	ba c0       	rjmp	.+372    	; 0x8cc <__fp_round>
 758:	b2 d0       	rcall	.+356    	; 0x8be <__fp_pscB>
 75a:	40 f0       	brcs	.+16     	; 0x76c <__divsf3+0x18>
 75c:	a9 d0       	rcall	.+338    	; 0x8b0 <__fp_pscA>
 75e:	30 f0       	brcs	.+12     	; 0x76c <__divsf3+0x18>
 760:	21 f4       	brne	.+8      	; 0x76a <__divsf3+0x16>
 762:	5f 3f       	cpi	r21, 0xFF	; 255
 764:	19 f0       	breq	.+6      	; 0x76c <__divsf3+0x18>
 766:	9b c0       	rjmp	.+310    	; 0x89e <__fp_inf>
 768:	51 11       	cpse	r21, r1
 76a:	e4 c0       	rjmp	.+456    	; 0x934 <__fp_szero>
 76c:	9e c0       	rjmp	.+316    	; 0x8aa <__fp_nan>

0000076e <__divsf3x>:
 76e:	bf d0       	rcall	.+382    	; 0x8ee <__fp_split3>
 770:	98 f3       	brcs	.-26     	; 0x758 <__divsf3+0x4>

00000772 <__divsf3_pse>:
 772:	99 23       	and	r25, r25
 774:	c9 f3       	breq	.-14     	; 0x768 <__divsf3+0x14>
 776:	55 23       	and	r21, r21
 778:	b1 f3       	breq	.-20     	; 0x766 <__divsf3+0x12>
 77a:	95 1b       	sub	r25, r21
 77c:	55 0b       	sbc	r21, r21
 77e:	bb 27       	eor	r27, r27
 780:	aa 27       	eor	r26, r26
 782:	62 17       	cp	r22, r18
 784:	73 07       	cpc	r23, r19
 786:	84 07       	cpc	r24, r20
 788:	38 f0       	brcs	.+14     	; 0x798 <__divsf3_pse+0x26>
 78a:	9f 5f       	subi	r25, 0xFF	; 255
 78c:	5f 4f       	sbci	r21, 0xFF	; 255
 78e:	22 0f       	add	r18, r18
 790:	33 1f       	adc	r19, r19
 792:	44 1f       	adc	r20, r20
 794:	aa 1f       	adc	r26, r26
 796:	a9 f3       	breq	.-22     	; 0x782 <__divsf3_pse+0x10>
 798:	33 d0       	rcall	.+102    	; 0x800 <__DATA_REGION_LENGTH__>
 79a:	0e 2e       	mov	r0, r30
 79c:	3a f0       	brmi	.+14     	; 0x7ac <__divsf3_pse+0x3a>
 79e:	e0 e8       	ldi	r30, 0x80	; 128
 7a0:	30 d0       	rcall	.+96     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 7a2:	91 50       	subi	r25, 0x01	; 1
 7a4:	50 40       	sbci	r21, 0x00	; 0
 7a6:	e6 95       	lsr	r30
 7a8:	00 1c       	adc	r0, r0
 7aa:	ca f7       	brpl	.-14     	; 0x79e <__divsf3_pse+0x2c>
 7ac:	29 d0       	rcall	.+82     	; 0x800 <__DATA_REGION_LENGTH__>
 7ae:	fe 2f       	mov	r31, r30
 7b0:	27 d0       	rcall	.+78     	; 0x800 <__DATA_REGION_LENGTH__>
 7b2:	66 0f       	add	r22, r22
 7b4:	77 1f       	adc	r23, r23
 7b6:	88 1f       	adc	r24, r24
 7b8:	bb 1f       	adc	r27, r27
 7ba:	26 17       	cp	r18, r22
 7bc:	37 07       	cpc	r19, r23
 7be:	48 07       	cpc	r20, r24
 7c0:	ab 07       	cpc	r26, r27
 7c2:	b0 e8       	ldi	r27, 0x80	; 128
 7c4:	09 f0       	breq	.+2      	; 0x7c8 <__divsf3_pse+0x56>
 7c6:	bb 0b       	sbc	r27, r27
 7c8:	80 2d       	mov	r24, r0
 7ca:	bf 01       	movw	r22, r30
 7cc:	ff 27       	eor	r31, r31
 7ce:	93 58       	subi	r25, 0x83	; 131
 7d0:	5f 4f       	sbci	r21, 0xFF	; 255
 7d2:	2a f0       	brmi	.+10     	; 0x7de <__divsf3_pse+0x6c>
 7d4:	9e 3f       	cpi	r25, 0xFE	; 254
 7d6:	51 05       	cpc	r21, r1
 7d8:	68 f0       	brcs	.+26     	; 0x7f4 <__divsf3_pse+0x82>
 7da:	61 c0       	rjmp	.+194    	; 0x89e <__fp_inf>
 7dc:	ab c0       	rjmp	.+342    	; 0x934 <__fp_szero>
 7de:	5f 3f       	cpi	r21, 0xFF	; 255
 7e0:	ec f3       	brlt	.-6      	; 0x7dc <__divsf3_pse+0x6a>
 7e2:	98 3e       	cpi	r25, 0xE8	; 232
 7e4:	dc f3       	brlt	.-10     	; 0x7dc <__divsf3_pse+0x6a>
 7e6:	86 95       	lsr	r24
 7e8:	77 95       	ror	r23
 7ea:	67 95       	ror	r22
 7ec:	b7 95       	ror	r27
 7ee:	f7 95       	ror	r31
 7f0:	9f 5f       	subi	r25, 0xFF	; 255
 7f2:	c9 f7       	brne	.-14     	; 0x7e6 <__divsf3_pse+0x74>
 7f4:	88 0f       	add	r24, r24
 7f6:	91 1d       	adc	r25, r1
 7f8:	96 95       	lsr	r25
 7fa:	87 95       	ror	r24
 7fc:	97 f9       	bld	r25, 7
 7fe:	08 95       	ret
 800:	e1 e0       	ldi	r30, 0x01	; 1
 802:	66 0f       	add	r22, r22
 804:	77 1f       	adc	r23, r23
 806:	88 1f       	adc	r24, r24
 808:	bb 1f       	adc	r27, r27
 80a:	62 17       	cp	r22, r18
 80c:	73 07       	cpc	r23, r19
 80e:	84 07       	cpc	r24, r20
 810:	ba 07       	cpc	r27, r26
 812:	20 f0       	brcs	.+8      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 814:	62 1b       	sub	r22, r18
 816:	73 0b       	sbc	r23, r19
 818:	84 0b       	sbc	r24, r20
 81a:	ba 0b       	sbc	r27, r26
 81c:	ee 1f       	adc	r30, r30
 81e:	88 f7       	brcc	.-30     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 820:	e0 95       	com	r30
 822:	08 95       	ret

00000824 <__floatunsisf>:
 824:	e8 94       	clt
 826:	09 c0       	rjmp	.+18     	; 0x83a <__floatsisf+0x12>

00000828 <__floatsisf>:
 828:	97 fb       	bst	r25, 7
 82a:	3e f4       	brtc	.+14     	; 0x83a <__floatsisf+0x12>
 82c:	90 95       	com	r25
 82e:	80 95       	com	r24
 830:	70 95       	com	r23
 832:	61 95       	neg	r22
 834:	7f 4f       	sbci	r23, 0xFF	; 255
 836:	8f 4f       	sbci	r24, 0xFF	; 255
 838:	9f 4f       	sbci	r25, 0xFF	; 255
 83a:	99 23       	and	r25, r25
 83c:	a9 f0       	breq	.+42     	; 0x868 <__stack+0x9>
 83e:	f9 2f       	mov	r31, r25
 840:	96 e9       	ldi	r25, 0x96	; 150
 842:	bb 27       	eor	r27, r27
 844:	93 95       	inc	r25
 846:	f6 95       	lsr	r31
 848:	87 95       	ror	r24
 84a:	77 95       	ror	r23
 84c:	67 95       	ror	r22
 84e:	b7 95       	ror	r27
 850:	f1 11       	cpse	r31, r1
 852:	f8 cf       	rjmp	.-16     	; 0x844 <__floatsisf+0x1c>
 854:	fa f4       	brpl	.+62     	; 0x894 <__stack+0x35>
 856:	bb 0f       	add	r27, r27
 858:	11 f4       	brne	.+4      	; 0x85e <__floatsisf+0x36>
 85a:	60 ff       	sbrs	r22, 0
 85c:	1b c0       	rjmp	.+54     	; 0x894 <__stack+0x35>
 85e:	6f 5f       	subi	r22, 0xFF	; 255
 860:	7f 4f       	sbci	r23, 0xFF	; 255
 862:	8f 4f       	sbci	r24, 0xFF	; 255
 864:	9f 4f       	sbci	r25, 0xFF	; 255
 866:	16 c0       	rjmp	.+44     	; 0x894 <__stack+0x35>
 868:	88 23       	and	r24, r24
 86a:	11 f0       	breq	.+4      	; 0x870 <__stack+0x11>
 86c:	96 e9       	ldi	r25, 0x96	; 150
 86e:	11 c0       	rjmp	.+34     	; 0x892 <__stack+0x33>
 870:	77 23       	and	r23, r23
 872:	21 f0       	breq	.+8      	; 0x87c <__stack+0x1d>
 874:	9e e8       	ldi	r25, 0x8E	; 142
 876:	87 2f       	mov	r24, r23
 878:	76 2f       	mov	r23, r22
 87a:	05 c0       	rjmp	.+10     	; 0x886 <__stack+0x27>
 87c:	66 23       	and	r22, r22
 87e:	71 f0       	breq	.+28     	; 0x89c <__stack+0x3d>
 880:	96 e8       	ldi	r25, 0x86	; 134
 882:	86 2f       	mov	r24, r22
 884:	70 e0       	ldi	r23, 0x00	; 0
 886:	60 e0       	ldi	r22, 0x00	; 0
 888:	2a f0       	brmi	.+10     	; 0x894 <__stack+0x35>
 88a:	9a 95       	dec	r25
 88c:	66 0f       	add	r22, r22
 88e:	77 1f       	adc	r23, r23
 890:	88 1f       	adc	r24, r24
 892:	da f7       	brpl	.-10     	; 0x88a <__stack+0x2b>
 894:	88 0f       	add	r24, r24
 896:	96 95       	lsr	r25
 898:	87 95       	ror	r24
 89a:	97 f9       	bld	r25, 7
 89c:	08 95       	ret

0000089e <__fp_inf>:
 89e:	97 f9       	bld	r25, 7
 8a0:	9f 67       	ori	r25, 0x7F	; 127
 8a2:	80 e8       	ldi	r24, 0x80	; 128
 8a4:	70 e0       	ldi	r23, 0x00	; 0
 8a6:	60 e0       	ldi	r22, 0x00	; 0
 8a8:	08 95       	ret

000008aa <__fp_nan>:
 8aa:	9f ef       	ldi	r25, 0xFF	; 255
 8ac:	80 ec       	ldi	r24, 0xC0	; 192
 8ae:	08 95       	ret

000008b0 <__fp_pscA>:
 8b0:	00 24       	eor	r0, r0
 8b2:	0a 94       	dec	r0
 8b4:	16 16       	cp	r1, r22
 8b6:	17 06       	cpc	r1, r23
 8b8:	18 06       	cpc	r1, r24
 8ba:	09 06       	cpc	r0, r25
 8bc:	08 95       	ret

000008be <__fp_pscB>:
 8be:	00 24       	eor	r0, r0
 8c0:	0a 94       	dec	r0
 8c2:	12 16       	cp	r1, r18
 8c4:	13 06       	cpc	r1, r19
 8c6:	14 06       	cpc	r1, r20
 8c8:	05 06       	cpc	r0, r21
 8ca:	08 95       	ret

000008cc <__fp_round>:
 8cc:	09 2e       	mov	r0, r25
 8ce:	03 94       	inc	r0
 8d0:	00 0c       	add	r0, r0
 8d2:	11 f4       	brne	.+4      	; 0x8d8 <__fp_round+0xc>
 8d4:	88 23       	and	r24, r24
 8d6:	52 f0       	brmi	.+20     	; 0x8ec <__fp_round+0x20>
 8d8:	bb 0f       	add	r27, r27
 8da:	40 f4       	brcc	.+16     	; 0x8ec <__fp_round+0x20>
 8dc:	bf 2b       	or	r27, r31
 8de:	11 f4       	brne	.+4      	; 0x8e4 <__fp_round+0x18>
 8e0:	60 ff       	sbrs	r22, 0
 8e2:	04 c0       	rjmp	.+8      	; 0x8ec <__fp_round+0x20>
 8e4:	6f 5f       	subi	r22, 0xFF	; 255
 8e6:	7f 4f       	sbci	r23, 0xFF	; 255
 8e8:	8f 4f       	sbci	r24, 0xFF	; 255
 8ea:	9f 4f       	sbci	r25, 0xFF	; 255
 8ec:	08 95       	ret

000008ee <__fp_split3>:
 8ee:	57 fd       	sbrc	r21, 7
 8f0:	90 58       	subi	r25, 0x80	; 128
 8f2:	44 0f       	add	r20, r20
 8f4:	55 1f       	adc	r21, r21
 8f6:	59 f0       	breq	.+22     	; 0x90e <__fp_splitA+0x10>
 8f8:	5f 3f       	cpi	r21, 0xFF	; 255
 8fa:	71 f0       	breq	.+28     	; 0x918 <__fp_splitA+0x1a>
 8fc:	47 95       	ror	r20

000008fe <__fp_splitA>:
 8fe:	88 0f       	add	r24, r24
 900:	97 fb       	bst	r25, 7
 902:	99 1f       	adc	r25, r25
 904:	61 f0       	breq	.+24     	; 0x91e <__fp_splitA+0x20>
 906:	9f 3f       	cpi	r25, 0xFF	; 255
 908:	79 f0       	breq	.+30     	; 0x928 <__fp_splitA+0x2a>
 90a:	87 95       	ror	r24
 90c:	08 95       	ret
 90e:	12 16       	cp	r1, r18
 910:	13 06       	cpc	r1, r19
 912:	14 06       	cpc	r1, r20
 914:	55 1f       	adc	r21, r21
 916:	f2 cf       	rjmp	.-28     	; 0x8fc <__fp_split3+0xe>
 918:	46 95       	lsr	r20
 91a:	f1 df       	rcall	.-30     	; 0x8fe <__fp_splitA>
 91c:	08 c0       	rjmp	.+16     	; 0x92e <__fp_splitA+0x30>
 91e:	16 16       	cp	r1, r22
 920:	17 06       	cpc	r1, r23
 922:	18 06       	cpc	r1, r24
 924:	99 1f       	adc	r25, r25
 926:	f1 cf       	rjmp	.-30     	; 0x90a <__fp_splitA+0xc>
 928:	86 95       	lsr	r24
 92a:	71 05       	cpc	r23, r1
 92c:	61 05       	cpc	r22, r1
 92e:	08 94       	sec
 930:	08 95       	ret

00000932 <__fp_zero>:
 932:	e8 94       	clt

00000934 <__fp_szero>:
 934:	bb 27       	eor	r27, r27
 936:	66 27       	eor	r22, r22
 938:	77 27       	eor	r23, r23
 93a:	cb 01       	movw	r24, r22
 93c:	97 f9       	bld	r25, 7
 93e:	08 95       	ret

00000940 <__mulsf3>:
 940:	0b d0       	rcall	.+22     	; 0x958 <__mulsf3x>
 942:	c4 cf       	rjmp	.-120    	; 0x8cc <__fp_round>
 944:	b5 df       	rcall	.-150    	; 0x8b0 <__fp_pscA>
 946:	28 f0       	brcs	.+10     	; 0x952 <__mulsf3+0x12>
 948:	ba df       	rcall	.-140    	; 0x8be <__fp_pscB>
 94a:	18 f0       	brcs	.+6      	; 0x952 <__mulsf3+0x12>
 94c:	95 23       	and	r25, r21
 94e:	09 f0       	breq	.+2      	; 0x952 <__mulsf3+0x12>
 950:	a6 cf       	rjmp	.-180    	; 0x89e <__fp_inf>
 952:	ab cf       	rjmp	.-170    	; 0x8aa <__fp_nan>
 954:	11 24       	eor	r1, r1
 956:	ee cf       	rjmp	.-36     	; 0x934 <__fp_szero>

00000958 <__mulsf3x>:
 958:	ca df       	rcall	.-108    	; 0x8ee <__fp_split3>
 95a:	a0 f3       	brcs	.-24     	; 0x944 <__mulsf3+0x4>

0000095c <__mulsf3_pse>:
 95c:	95 9f       	mul	r25, r21
 95e:	d1 f3       	breq	.-12     	; 0x954 <__mulsf3+0x14>
 960:	95 0f       	add	r25, r21
 962:	50 e0       	ldi	r21, 0x00	; 0
 964:	55 1f       	adc	r21, r21
 966:	62 9f       	mul	r22, r18
 968:	f0 01       	movw	r30, r0
 96a:	72 9f       	mul	r23, r18
 96c:	bb 27       	eor	r27, r27
 96e:	f0 0d       	add	r31, r0
 970:	b1 1d       	adc	r27, r1
 972:	63 9f       	mul	r22, r19
 974:	aa 27       	eor	r26, r26
 976:	f0 0d       	add	r31, r0
 978:	b1 1d       	adc	r27, r1
 97a:	aa 1f       	adc	r26, r26
 97c:	64 9f       	mul	r22, r20
 97e:	66 27       	eor	r22, r22
 980:	b0 0d       	add	r27, r0
 982:	a1 1d       	adc	r26, r1
 984:	66 1f       	adc	r22, r22
 986:	82 9f       	mul	r24, r18
 988:	22 27       	eor	r18, r18
 98a:	b0 0d       	add	r27, r0
 98c:	a1 1d       	adc	r26, r1
 98e:	62 1f       	adc	r22, r18
 990:	73 9f       	mul	r23, r19
 992:	b0 0d       	add	r27, r0
 994:	a1 1d       	adc	r26, r1
 996:	62 1f       	adc	r22, r18
 998:	83 9f       	mul	r24, r19
 99a:	a0 0d       	add	r26, r0
 99c:	61 1d       	adc	r22, r1
 99e:	22 1f       	adc	r18, r18
 9a0:	74 9f       	mul	r23, r20
 9a2:	33 27       	eor	r19, r19
 9a4:	a0 0d       	add	r26, r0
 9a6:	61 1d       	adc	r22, r1
 9a8:	23 1f       	adc	r18, r19
 9aa:	84 9f       	mul	r24, r20
 9ac:	60 0d       	add	r22, r0
 9ae:	21 1d       	adc	r18, r1
 9b0:	82 2f       	mov	r24, r18
 9b2:	76 2f       	mov	r23, r22
 9b4:	6a 2f       	mov	r22, r26
 9b6:	11 24       	eor	r1, r1
 9b8:	9f 57       	subi	r25, 0x7F	; 127
 9ba:	50 40       	sbci	r21, 0x00	; 0
 9bc:	8a f0       	brmi	.+34     	; 0x9e0 <__mulsf3_pse+0x84>
 9be:	e1 f0       	breq	.+56     	; 0x9f8 <__mulsf3_pse+0x9c>
 9c0:	88 23       	and	r24, r24
 9c2:	4a f0       	brmi	.+18     	; 0x9d6 <__mulsf3_pse+0x7a>
 9c4:	ee 0f       	add	r30, r30
 9c6:	ff 1f       	adc	r31, r31
 9c8:	bb 1f       	adc	r27, r27
 9ca:	66 1f       	adc	r22, r22
 9cc:	77 1f       	adc	r23, r23
 9ce:	88 1f       	adc	r24, r24
 9d0:	91 50       	subi	r25, 0x01	; 1
 9d2:	50 40       	sbci	r21, 0x00	; 0
 9d4:	a9 f7       	brne	.-22     	; 0x9c0 <__mulsf3_pse+0x64>
 9d6:	9e 3f       	cpi	r25, 0xFE	; 254
 9d8:	51 05       	cpc	r21, r1
 9da:	70 f0       	brcs	.+28     	; 0x9f8 <__mulsf3_pse+0x9c>
 9dc:	60 cf       	rjmp	.-320    	; 0x89e <__fp_inf>
 9de:	aa cf       	rjmp	.-172    	; 0x934 <__fp_szero>
 9e0:	5f 3f       	cpi	r21, 0xFF	; 255
 9e2:	ec f3       	brlt	.-6      	; 0x9de <__mulsf3_pse+0x82>
 9e4:	98 3e       	cpi	r25, 0xE8	; 232
 9e6:	dc f3       	brlt	.-10     	; 0x9de <__mulsf3_pse+0x82>
 9e8:	86 95       	lsr	r24
 9ea:	77 95       	ror	r23
 9ec:	67 95       	ror	r22
 9ee:	b7 95       	ror	r27
 9f0:	f7 95       	ror	r31
 9f2:	e7 95       	ror	r30
 9f4:	9f 5f       	subi	r25, 0xFF	; 255
 9f6:	c1 f7       	brne	.-16     	; 0x9e8 <__mulsf3_pse+0x8c>
 9f8:	fe 2b       	or	r31, r30
 9fa:	88 0f       	add	r24, r24
 9fc:	91 1d       	adc	r25, r1
 9fe:	96 95       	lsr	r25
 a00:	87 95       	ror	r24
 a02:	97 f9       	bld	r25, 7
 a04:	08 95       	ret

00000a06 <dtostrf>:
 a06:	ef 92       	push	r14
 a08:	0f 93       	push	r16
 a0a:	1f 93       	push	r17
 a0c:	cf 93       	push	r28
 a0e:	df 93       	push	r29
 a10:	e8 01       	movw	r28, r16
 a12:	47 fd       	sbrc	r20, 7
 a14:	02 c0       	rjmp	.+4      	; 0xa1a <dtostrf+0x14>
 a16:	34 e0       	ldi	r19, 0x04	; 4
 a18:	01 c0       	rjmp	.+2      	; 0xa1c <dtostrf+0x16>
 a1a:	34 e1       	ldi	r19, 0x14	; 20
 a1c:	04 2e       	mov	r0, r20
 a1e:	00 0c       	add	r0, r0
 a20:	55 0b       	sbc	r21, r21
 a22:	57 ff       	sbrs	r21, 7
 a24:	03 c0       	rjmp	.+6      	; 0xa2c <dtostrf+0x26>
 a26:	51 95       	neg	r21
 a28:	41 95       	neg	r20
 a2a:	51 09       	sbc	r21, r1
 a2c:	e3 2e       	mov	r14, r19
 a2e:	02 2f       	mov	r16, r18
 a30:	24 2f       	mov	r18, r20
 a32:	ae 01       	movw	r20, r28
 a34:	2a d0       	rcall	.+84     	; 0xa8a <dtoa_prf>
 a36:	ce 01       	movw	r24, r28
 a38:	df 91       	pop	r29
 a3a:	cf 91       	pop	r28
 a3c:	1f 91       	pop	r17
 a3e:	0f 91       	pop	r16
 a40:	ef 90       	pop	r14
 a42:	08 95       	ret

00000a44 <__itoa_ncheck>:
 a44:	bb 27       	eor	r27, r27
 a46:	4a 30       	cpi	r20, 0x0A	; 10
 a48:	31 f4       	brne	.+12     	; 0xa56 <__itoa_ncheck+0x12>
 a4a:	99 23       	and	r25, r25
 a4c:	22 f4       	brpl	.+8      	; 0xa56 <__itoa_ncheck+0x12>
 a4e:	bd e2       	ldi	r27, 0x2D	; 45
 a50:	90 95       	com	r25
 a52:	81 95       	neg	r24
 a54:	9f 4f       	sbci	r25, 0xFF	; 255
 a56:	01 c0       	rjmp	.+2      	; 0xa5a <__utoa_common>

00000a58 <__utoa_ncheck>:
 a58:	bb 27       	eor	r27, r27

00000a5a <__utoa_common>:
 a5a:	fb 01       	movw	r30, r22
 a5c:	55 27       	eor	r21, r21
 a5e:	aa 27       	eor	r26, r26
 a60:	88 0f       	add	r24, r24
 a62:	99 1f       	adc	r25, r25
 a64:	aa 1f       	adc	r26, r26
 a66:	a4 17       	cp	r26, r20
 a68:	10 f0       	brcs	.+4      	; 0xa6e <__utoa_common+0x14>
 a6a:	a4 1b       	sub	r26, r20
 a6c:	83 95       	inc	r24
 a6e:	50 51       	subi	r21, 0x10	; 16
 a70:	b9 f7       	brne	.-18     	; 0xa60 <__utoa_common+0x6>
 a72:	a0 5d       	subi	r26, 0xD0	; 208
 a74:	aa 33       	cpi	r26, 0x3A	; 58
 a76:	08 f0       	brcs	.+2      	; 0xa7a <__utoa_common+0x20>
 a78:	a9 5d       	subi	r26, 0xD9	; 217
 a7a:	a1 93       	st	Z+, r26
 a7c:	00 97       	sbiw	r24, 0x00	; 0
 a7e:	79 f7       	brne	.-34     	; 0xa5e <__utoa_common+0x4>
 a80:	b1 11       	cpse	r27, r1
 a82:	b1 93       	st	Z+, r27
 a84:	11 92       	st	Z+, r1
 a86:	cb 01       	movw	r24, r22
 a88:	2f c2       	rjmp	.+1118   	; 0xee8 <strrev>

00000a8a <dtoa_prf>:
 a8a:	a9 e0       	ldi	r26, 0x09	; 9
 a8c:	b0 e0       	ldi	r27, 0x00	; 0
 a8e:	ea e4       	ldi	r30, 0x4A	; 74
 a90:	f5 e0       	ldi	r31, 0x05	; 5
 a92:	40 c2       	rjmp	.+1152   	; 0xf14 <__prologue_saves__+0xc>
 a94:	6a 01       	movw	r12, r20
 a96:	12 2f       	mov	r17, r18
 a98:	b0 2e       	mov	r11, r16
 a9a:	2b e3       	ldi	r18, 0x3B	; 59
 a9c:	20 17       	cp	r18, r16
 a9e:	20 f0       	brcs	.+8      	; 0xaa8 <dtoa_prf+0x1e>
 aa0:	ff 24       	eor	r15, r15
 aa2:	f3 94       	inc	r15
 aa4:	f0 0e       	add	r15, r16
 aa6:	02 c0       	rjmp	.+4      	; 0xaac <dtoa_prf+0x22>
 aa8:	2c e3       	ldi	r18, 0x3C	; 60
 aaa:	f2 2e       	mov	r15, r18
 aac:	0f 2d       	mov	r16, r15
 aae:	27 e0       	ldi	r18, 0x07	; 7
 ab0:	ae 01       	movw	r20, r28
 ab2:	4f 5f       	subi	r20, 0xFF	; 255
 ab4:	5f 4f       	sbci	r21, 0xFF	; 255
 ab6:	40 d1       	rcall	.+640    	; 0xd38 <__ftoa_engine>
 ab8:	bc 01       	movw	r22, r24
 aba:	49 81       	ldd	r20, Y+1	; 0x01
 abc:	84 2f       	mov	r24, r20
 abe:	89 70       	andi	r24, 0x09	; 9
 ac0:	81 30       	cpi	r24, 0x01	; 1
 ac2:	31 f0       	breq	.+12     	; 0xad0 <dtoa_prf+0x46>
 ac4:	e1 fc       	sbrc	r14, 1
 ac6:	06 c0       	rjmp	.+12     	; 0xad4 <dtoa_prf+0x4a>
 ac8:	e0 fe       	sbrs	r14, 0
 aca:	06 c0       	rjmp	.+12     	; 0xad8 <dtoa_prf+0x4e>
 acc:	90 e2       	ldi	r25, 0x20	; 32
 ace:	05 c0       	rjmp	.+10     	; 0xada <dtoa_prf+0x50>
 ad0:	9d e2       	ldi	r25, 0x2D	; 45
 ad2:	03 c0       	rjmp	.+6      	; 0xada <dtoa_prf+0x50>
 ad4:	9b e2       	ldi	r25, 0x2B	; 43
 ad6:	01 c0       	rjmp	.+2      	; 0xada <dtoa_prf+0x50>
 ad8:	90 e0       	ldi	r25, 0x00	; 0
 ada:	5e 2d       	mov	r21, r14
 adc:	50 71       	andi	r21, 0x10	; 16
 ade:	43 ff       	sbrs	r20, 3
 ae0:	3c c0       	rjmp	.+120    	; 0xb5a <dtoa_prf+0xd0>
 ae2:	91 11       	cpse	r25, r1
 ae4:	02 c0       	rjmp	.+4      	; 0xaea <dtoa_prf+0x60>
 ae6:	83 e0       	ldi	r24, 0x03	; 3
 ae8:	01 c0       	rjmp	.+2      	; 0xaec <dtoa_prf+0x62>
 aea:	84 e0       	ldi	r24, 0x04	; 4
 aec:	81 17       	cp	r24, r17
 aee:	18 f4       	brcc	.+6      	; 0xaf6 <dtoa_prf+0x6c>
 af0:	21 2f       	mov	r18, r17
 af2:	28 1b       	sub	r18, r24
 af4:	01 c0       	rjmp	.+2      	; 0xaf8 <dtoa_prf+0x6e>
 af6:	20 e0       	ldi	r18, 0x00	; 0
 af8:	51 11       	cpse	r21, r1
 afa:	0b c0       	rjmp	.+22     	; 0xb12 <dtoa_prf+0x88>
 afc:	f6 01       	movw	r30, r12
 afe:	82 2f       	mov	r24, r18
 b00:	30 e2       	ldi	r19, 0x20	; 32
 b02:	88 23       	and	r24, r24
 b04:	19 f0       	breq	.+6      	; 0xb0c <dtoa_prf+0x82>
 b06:	31 93       	st	Z+, r19
 b08:	81 50       	subi	r24, 0x01	; 1
 b0a:	fb cf       	rjmp	.-10     	; 0xb02 <dtoa_prf+0x78>
 b0c:	c2 0e       	add	r12, r18
 b0e:	d1 1c       	adc	r13, r1
 b10:	20 e0       	ldi	r18, 0x00	; 0
 b12:	99 23       	and	r25, r25
 b14:	29 f0       	breq	.+10     	; 0xb20 <dtoa_prf+0x96>
 b16:	d6 01       	movw	r26, r12
 b18:	9c 93       	st	X, r25
 b1a:	f6 01       	movw	r30, r12
 b1c:	31 96       	adiw	r30, 0x01	; 1
 b1e:	6f 01       	movw	r12, r30
 b20:	c6 01       	movw	r24, r12
 b22:	03 96       	adiw	r24, 0x03	; 3
 b24:	e2 fe       	sbrs	r14, 2
 b26:	0a c0       	rjmp	.+20     	; 0xb3c <dtoa_prf+0xb2>
 b28:	3e e4       	ldi	r19, 0x4E	; 78
 b2a:	d6 01       	movw	r26, r12
 b2c:	3c 93       	st	X, r19
 b2e:	41 e4       	ldi	r20, 0x41	; 65
 b30:	11 96       	adiw	r26, 0x01	; 1
 b32:	4c 93       	st	X, r20
 b34:	11 97       	sbiw	r26, 0x01	; 1
 b36:	12 96       	adiw	r26, 0x02	; 2
 b38:	3c 93       	st	X, r19
 b3a:	06 c0       	rjmp	.+12     	; 0xb48 <dtoa_prf+0xbe>
 b3c:	3e e6       	ldi	r19, 0x6E	; 110
 b3e:	f6 01       	movw	r30, r12
 b40:	30 83       	st	Z, r19
 b42:	41 e6       	ldi	r20, 0x61	; 97
 b44:	41 83       	std	Z+1, r20	; 0x01
 b46:	32 83       	std	Z+2, r19	; 0x02
 b48:	fc 01       	movw	r30, r24
 b4a:	32 2f       	mov	r19, r18
 b4c:	40 e2       	ldi	r20, 0x20	; 32
 b4e:	33 23       	and	r19, r19
 b50:	09 f4       	brne	.+2      	; 0xb54 <dtoa_prf+0xca>
 b52:	42 c0       	rjmp	.+132    	; 0xbd8 <dtoa_prf+0x14e>
 b54:	41 93       	st	Z+, r20
 b56:	31 50       	subi	r19, 0x01	; 1
 b58:	fa cf       	rjmp	.-12     	; 0xb4e <dtoa_prf+0xc4>
 b5a:	42 ff       	sbrs	r20, 2
 b5c:	44 c0       	rjmp	.+136    	; 0xbe6 <dtoa_prf+0x15c>
 b5e:	91 11       	cpse	r25, r1
 b60:	02 c0       	rjmp	.+4      	; 0xb66 <dtoa_prf+0xdc>
 b62:	83 e0       	ldi	r24, 0x03	; 3
 b64:	01 c0       	rjmp	.+2      	; 0xb68 <dtoa_prf+0xde>
 b66:	84 e0       	ldi	r24, 0x04	; 4
 b68:	81 17       	cp	r24, r17
 b6a:	18 f4       	brcc	.+6      	; 0xb72 <dtoa_prf+0xe8>
 b6c:	21 2f       	mov	r18, r17
 b6e:	28 1b       	sub	r18, r24
 b70:	01 c0       	rjmp	.+2      	; 0xb74 <dtoa_prf+0xea>
 b72:	20 e0       	ldi	r18, 0x00	; 0
 b74:	51 11       	cpse	r21, r1
 b76:	0b c0       	rjmp	.+22     	; 0xb8e <dtoa_prf+0x104>
 b78:	f6 01       	movw	r30, r12
 b7a:	82 2f       	mov	r24, r18
 b7c:	30 e2       	ldi	r19, 0x20	; 32
 b7e:	88 23       	and	r24, r24
 b80:	19 f0       	breq	.+6      	; 0xb88 <dtoa_prf+0xfe>
 b82:	31 93       	st	Z+, r19
 b84:	81 50       	subi	r24, 0x01	; 1
 b86:	fb cf       	rjmp	.-10     	; 0xb7e <dtoa_prf+0xf4>
 b88:	c2 0e       	add	r12, r18
 b8a:	d1 1c       	adc	r13, r1
 b8c:	20 e0       	ldi	r18, 0x00	; 0
 b8e:	99 23       	and	r25, r25
 b90:	29 f0       	breq	.+10     	; 0xb9c <dtoa_prf+0x112>
 b92:	d6 01       	movw	r26, r12
 b94:	9c 93       	st	X, r25
 b96:	f6 01       	movw	r30, r12
 b98:	31 96       	adiw	r30, 0x01	; 1
 b9a:	6f 01       	movw	r12, r30
 b9c:	c6 01       	movw	r24, r12
 b9e:	03 96       	adiw	r24, 0x03	; 3
 ba0:	e2 fe       	sbrs	r14, 2
 ba2:	0b c0       	rjmp	.+22     	; 0xbba <dtoa_prf+0x130>
 ba4:	39 e4       	ldi	r19, 0x49	; 73
 ba6:	d6 01       	movw	r26, r12
 ba8:	3c 93       	st	X, r19
 baa:	3e e4       	ldi	r19, 0x4E	; 78
 bac:	11 96       	adiw	r26, 0x01	; 1
 bae:	3c 93       	st	X, r19
 bb0:	11 97       	sbiw	r26, 0x01	; 1
 bb2:	36 e4       	ldi	r19, 0x46	; 70
 bb4:	12 96       	adiw	r26, 0x02	; 2
 bb6:	3c 93       	st	X, r19
 bb8:	07 c0       	rjmp	.+14     	; 0xbc8 <dtoa_prf+0x13e>
 bba:	39 e6       	ldi	r19, 0x69	; 105
 bbc:	f6 01       	movw	r30, r12
 bbe:	30 83       	st	Z, r19
 bc0:	3e e6       	ldi	r19, 0x6E	; 110
 bc2:	31 83       	std	Z+1, r19	; 0x01
 bc4:	36 e6       	ldi	r19, 0x66	; 102
 bc6:	32 83       	std	Z+2, r19	; 0x02
 bc8:	fc 01       	movw	r30, r24
 bca:	32 2f       	mov	r19, r18
 bcc:	40 e2       	ldi	r20, 0x20	; 32
 bce:	33 23       	and	r19, r19
 bd0:	19 f0       	breq	.+6      	; 0xbd8 <dtoa_prf+0x14e>
 bd2:	41 93       	st	Z+, r20
 bd4:	31 50       	subi	r19, 0x01	; 1
 bd6:	fb cf       	rjmp	.-10     	; 0xbce <dtoa_prf+0x144>
 bd8:	fc 01       	movw	r30, r24
 bda:	e2 0f       	add	r30, r18
 bdc:	f1 1d       	adc	r31, r1
 bde:	10 82       	st	Z, r1
 be0:	8e ef       	ldi	r24, 0xFE	; 254
 be2:	9f ef       	ldi	r25, 0xFF	; 255
 be4:	a6 c0       	rjmp	.+332    	; 0xd32 <dtoa_prf+0x2a8>
 be6:	21 e0       	ldi	r18, 0x01	; 1
 be8:	30 e0       	ldi	r19, 0x00	; 0
 bea:	91 11       	cpse	r25, r1
 bec:	02 c0       	rjmp	.+4      	; 0xbf2 <dtoa_prf+0x168>
 bee:	20 e0       	ldi	r18, 0x00	; 0
 bf0:	30 e0       	ldi	r19, 0x00	; 0
 bf2:	16 16       	cp	r1, r22
 bf4:	17 06       	cpc	r1, r23
 bf6:	1c f4       	brge	.+6      	; 0xbfe <dtoa_prf+0x174>
 bf8:	fb 01       	movw	r30, r22
 bfa:	31 96       	adiw	r30, 0x01	; 1
 bfc:	02 c0       	rjmp	.+4      	; 0xc02 <dtoa_prf+0x178>
 bfe:	e1 e0       	ldi	r30, 0x01	; 1
 c00:	f0 e0       	ldi	r31, 0x00	; 0
 c02:	2e 0f       	add	r18, r30
 c04:	3f 1f       	adc	r19, r31
 c06:	bb 20       	and	r11, r11
 c08:	21 f0       	breq	.+8      	; 0xc12 <dtoa_prf+0x188>
 c0a:	eb 2d       	mov	r30, r11
 c0c:	f0 e0       	ldi	r31, 0x00	; 0
 c0e:	31 96       	adiw	r30, 0x01	; 1
 c10:	02 c0       	rjmp	.+4      	; 0xc16 <dtoa_prf+0x18c>
 c12:	e0 e0       	ldi	r30, 0x00	; 0
 c14:	f0 e0       	ldi	r31, 0x00	; 0
 c16:	2e 0f       	add	r18, r30
 c18:	3f 1f       	adc	r19, r31
 c1a:	e1 2f       	mov	r30, r17
 c1c:	f0 e0       	ldi	r31, 0x00	; 0
 c1e:	2e 17       	cp	r18, r30
 c20:	3f 07       	cpc	r19, r31
 c22:	1c f4       	brge	.+6      	; 0xc2a <dtoa_prf+0x1a0>
 c24:	12 1b       	sub	r17, r18
 c26:	21 2f       	mov	r18, r17
 c28:	01 c0       	rjmp	.+2      	; 0xc2c <dtoa_prf+0x1a2>
 c2a:	20 e0       	ldi	r18, 0x00	; 0
 c2c:	8e 2d       	mov	r24, r14
 c2e:	88 71       	andi	r24, 0x18	; 24
 c30:	59 f4       	brne	.+22     	; 0xc48 <dtoa_prf+0x1be>
 c32:	f6 01       	movw	r30, r12
 c34:	82 2f       	mov	r24, r18
 c36:	30 e2       	ldi	r19, 0x20	; 32
 c38:	88 23       	and	r24, r24
 c3a:	19 f0       	breq	.+6      	; 0xc42 <dtoa_prf+0x1b8>
 c3c:	31 93       	st	Z+, r19
 c3e:	81 50       	subi	r24, 0x01	; 1
 c40:	fb cf       	rjmp	.-10     	; 0xc38 <dtoa_prf+0x1ae>
 c42:	c2 0e       	add	r12, r18
 c44:	d1 1c       	adc	r13, r1
 c46:	20 e0       	ldi	r18, 0x00	; 0
 c48:	99 23       	and	r25, r25
 c4a:	29 f0       	breq	.+10     	; 0xc56 <dtoa_prf+0x1cc>
 c4c:	d6 01       	movw	r26, r12
 c4e:	9c 93       	st	X, r25
 c50:	f6 01       	movw	r30, r12
 c52:	31 96       	adiw	r30, 0x01	; 1
 c54:	6f 01       	movw	r12, r30
 c56:	51 11       	cpse	r21, r1
 c58:	0b c0       	rjmp	.+22     	; 0xc70 <dtoa_prf+0x1e6>
 c5a:	f6 01       	movw	r30, r12
 c5c:	82 2f       	mov	r24, r18
 c5e:	90 e3       	ldi	r25, 0x30	; 48
 c60:	88 23       	and	r24, r24
 c62:	19 f0       	breq	.+6      	; 0xc6a <dtoa_prf+0x1e0>
 c64:	91 93       	st	Z+, r25
 c66:	81 50       	subi	r24, 0x01	; 1
 c68:	fb cf       	rjmp	.-10     	; 0xc60 <dtoa_prf+0x1d6>
 c6a:	c2 0e       	add	r12, r18
 c6c:	d1 1c       	adc	r13, r1
 c6e:	20 e0       	ldi	r18, 0x00	; 0
 c70:	0f 2d       	mov	r16, r15
 c72:	06 0f       	add	r16, r22
 c74:	9a 81       	ldd	r25, Y+2	; 0x02
 c76:	34 2f       	mov	r19, r20
 c78:	30 71       	andi	r19, 0x10	; 16
 c7a:	44 ff       	sbrs	r20, 4
 c7c:	03 c0       	rjmp	.+6      	; 0xc84 <dtoa_prf+0x1fa>
 c7e:	91 33       	cpi	r25, 0x31	; 49
 c80:	09 f4       	brne	.+2      	; 0xc84 <dtoa_prf+0x1fa>
 c82:	01 50       	subi	r16, 0x01	; 1
 c84:	10 16       	cp	r1, r16
 c86:	24 f4       	brge	.+8      	; 0xc90 <dtoa_prf+0x206>
 c88:	09 30       	cpi	r16, 0x09	; 9
 c8a:	18 f0       	brcs	.+6      	; 0xc92 <dtoa_prf+0x208>
 c8c:	08 e0       	ldi	r16, 0x08	; 8
 c8e:	01 c0       	rjmp	.+2      	; 0xc92 <dtoa_prf+0x208>
 c90:	01 e0       	ldi	r16, 0x01	; 1
 c92:	ab 01       	movw	r20, r22
 c94:	77 ff       	sbrs	r23, 7
 c96:	02 c0       	rjmp	.+4      	; 0xc9c <dtoa_prf+0x212>
 c98:	40 e0       	ldi	r20, 0x00	; 0
 c9a:	50 e0       	ldi	r21, 0x00	; 0
 c9c:	fb 01       	movw	r30, r22
 c9e:	e4 1b       	sub	r30, r20
 ca0:	f5 0b       	sbc	r31, r21
 ca2:	a1 e0       	ldi	r26, 0x01	; 1
 ca4:	b0 e0       	ldi	r27, 0x00	; 0
 ca6:	ac 0f       	add	r26, r28
 ca8:	bd 1f       	adc	r27, r29
 caa:	ea 0f       	add	r30, r26
 cac:	fb 1f       	adc	r31, r27
 cae:	8e e2       	ldi	r24, 0x2E	; 46
 cb0:	a8 2e       	mov	r10, r24
 cb2:	4b 01       	movw	r8, r22
 cb4:	80 1a       	sub	r8, r16
 cb6:	91 08       	sbc	r9, r1
 cb8:	0b 2d       	mov	r16, r11
 cba:	10 e0       	ldi	r17, 0x00	; 0
 cbc:	11 95       	neg	r17
 cbe:	01 95       	neg	r16
 cc0:	11 09       	sbc	r17, r1
 cc2:	4f 3f       	cpi	r20, 0xFF	; 255
 cc4:	bf ef       	ldi	r27, 0xFF	; 255
 cc6:	5b 07       	cpc	r21, r27
 cc8:	21 f4       	brne	.+8      	; 0xcd2 <dtoa_prf+0x248>
 cca:	d6 01       	movw	r26, r12
 ccc:	ac 92       	st	X, r10
 cce:	11 96       	adiw	r26, 0x01	; 1
 cd0:	6d 01       	movw	r12, r26
 cd2:	64 17       	cp	r22, r20
 cd4:	75 07       	cpc	r23, r21
 cd6:	2c f0       	brlt	.+10     	; 0xce2 <dtoa_prf+0x258>
 cd8:	84 16       	cp	r8, r20
 cda:	95 06       	cpc	r9, r21
 cdc:	14 f4       	brge	.+4      	; 0xce2 <dtoa_prf+0x258>
 cde:	81 81       	ldd	r24, Z+1	; 0x01
 ce0:	01 c0       	rjmp	.+2      	; 0xce4 <dtoa_prf+0x25a>
 ce2:	80 e3       	ldi	r24, 0x30	; 48
 ce4:	41 50       	subi	r20, 0x01	; 1
 ce6:	51 09       	sbc	r21, r1
 ce8:	31 96       	adiw	r30, 0x01	; 1
 cea:	d6 01       	movw	r26, r12
 cec:	11 96       	adiw	r26, 0x01	; 1
 cee:	7d 01       	movw	r14, r26
 cf0:	40 17       	cp	r20, r16
 cf2:	51 07       	cpc	r21, r17
 cf4:	24 f0       	brlt	.+8      	; 0xcfe <dtoa_prf+0x274>
 cf6:	d6 01       	movw	r26, r12
 cf8:	8c 93       	st	X, r24
 cfa:	67 01       	movw	r12, r14
 cfc:	e2 cf       	rjmp	.-60     	; 0xcc2 <dtoa_prf+0x238>
 cfe:	64 17       	cp	r22, r20
 d00:	75 07       	cpc	r23, r21
 d02:	39 f4       	brne	.+14     	; 0xd12 <dtoa_prf+0x288>
 d04:	96 33       	cpi	r25, 0x36	; 54
 d06:	20 f4       	brcc	.+8      	; 0xd10 <dtoa_prf+0x286>
 d08:	95 33       	cpi	r25, 0x35	; 53
 d0a:	19 f4       	brne	.+6      	; 0xd12 <dtoa_prf+0x288>
 d0c:	31 11       	cpse	r19, r1
 d0e:	01 c0       	rjmp	.+2      	; 0xd12 <dtoa_prf+0x288>
 d10:	81 e3       	ldi	r24, 0x31	; 49
 d12:	f6 01       	movw	r30, r12
 d14:	80 83       	st	Z, r24
 d16:	f7 01       	movw	r30, r14
 d18:	82 2f       	mov	r24, r18
 d1a:	90 e2       	ldi	r25, 0x20	; 32
 d1c:	88 23       	and	r24, r24
 d1e:	19 f0       	breq	.+6      	; 0xd26 <dtoa_prf+0x29c>
 d20:	91 93       	st	Z+, r25
 d22:	81 50       	subi	r24, 0x01	; 1
 d24:	fb cf       	rjmp	.-10     	; 0xd1c <dtoa_prf+0x292>
 d26:	f7 01       	movw	r30, r14
 d28:	e2 0f       	add	r30, r18
 d2a:	f1 1d       	adc	r31, r1
 d2c:	10 82       	st	Z, r1
 d2e:	80 e0       	ldi	r24, 0x00	; 0
 d30:	90 e0       	ldi	r25, 0x00	; 0
 d32:	29 96       	adiw	r28, 0x09	; 9
 d34:	ec e0       	ldi	r30, 0x0C	; 12
 d36:	0a c1       	rjmp	.+532    	; 0xf4c <__epilogue_restores__+0xc>

00000d38 <__ftoa_engine>:
 d38:	28 30       	cpi	r18, 0x08	; 8
 d3a:	08 f0       	brcs	.+2      	; 0xd3e <__ftoa_engine+0x6>
 d3c:	27 e0       	ldi	r18, 0x07	; 7
 d3e:	33 27       	eor	r19, r19
 d40:	da 01       	movw	r26, r20
 d42:	99 0f       	add	r25, r25
 d44:	31 1d       	adc	r19, r1
 d46:	87 fd       	sbrc	r24, 7
 d48:	91 60       	ori	r25, 0x01	; 1
 d4a:	00 96       	adiw	r24, 0x00	; 0
 d4c:	61 05       	cpc	r22, r1
 d4e:	71 05       	cpc	r23, r1
 d50:	39 f4       	brne	.+14     	; 0xd60 <__ftoa_engine+0x28>
 d52:	32 60       	ori	r19, 0x02	; 2
 d54:	2e 5f       	subi	r18, 0xFE	; 254
 d56:	3d 93       	st	X+, r19
 d58:	30 e3       	ldi	r19, 0x30	; 48
 d5a:	2a 95       	dec	r18
 d5c:	e1 f7       	brne	.-8      	; 0xd56 <__ftoa_engine+0x1e>
 d5e:	08 95       	ret
 d60:	9f 3f       	cpi	r25, 0xFF	; 255
 d62:	30 f0       	brcs	.+12     	; 0xd70 <__ftoa_engine+0x38>
 d64:	80 38       	cpi	r24, 0x80	; 128
 d66:	71 05       	cpc	r23, r1
 d68:	61 05       	cpc	r22, r1
 d6a:	09 f0       	breq	.+2      	; 0xd6e <__ftoa_engine+0x36>
 d6c:	3c 5f       	subi	r19, 0xFC	; 252
 d6e:	3c 5f       	subi	r19, 0xFC	; 252
 d70:	3d 93       	st	X+, r19
 d72:	91 30       	cpi	r25, 0x01	; 1
 d74:	08 f0       	brcs	.+2      	; 0xd78 <__ftoa_engine+0x40>
 d76:	80 68       	ori	r24, 0x80	; 128
 d78:	91 1d       	adc	r25, r1
 d7a:	df 93       	push	r29
 d7c:	cf 93       	push	r28
 d7e:	1f 93       	push	r17
 d80:	0f 93       	push	r16
 d82:	ff 92       	push	r15
 d84:	ef 92       	push	r14
 d86:	19 2f       	mov	r17, r25
 d88:	98 7f       	andi	r25, 0xF8	; 248
 d8a:	96 95       	lsr	r25
 d8c:	e9 2f       	mov	r30, r25
 d8e:	96 95       	lsr	r25
 d90:	96 95       	lsr	r25
 d92:	e9 0f       	add	r30, r25
 d94:	ff 27       	eor	r31, r31
 d96:	e2 55       	subi	r30, 0x52	; 82
 d98:	ff 4f       	sbci	r31, 0xFF	; 255
 d9a:	99 27       	eor	r25, r25
 d9c:	33 27       	eor	r19, r19
 d9e:	ee 24       	eor	r14, r14
 da0:	ff 24       	eor	r15, r15
 da2:	a7 01       	movw	r20, r14
 da4:	e7 01       	movw	r28, r14
 da6:	05 90       	lpm	r0, Z+
 da8:	08 94       	sec
 daa:	07 94       	ror	r0
 dac:	28 f4       	brcc	.+10     	; 0xdb8 <__ftoa_engine+0x80>
 dae:	36 0f       	add	r19, r22
 db0:	e7 1e       	adc	r14, r23
 db2:	f8 1e       	adc	r15, r24
 db4:	49 1f       	adc	r20, r25
 db6:	51 1d       	adc	r21, r1
 db8:	66 0f       	add	r22, r22
 dba:	77 1f       	adc	r23, r23
 dbc:	88 1f       	adc	r24, r24
 dbe:	99 1f       	adc	r25, r25
 dc0:	06 94       	lsr	r0
 dc2:	a1 f7       	brne	.-24     	; 0xdac <__ftoa_engine+0x74>
 dc4:	05 90       	lpm	r0, Z+
 dc6:	07 94       	ror	r0
 dc8:	28 f4       	brcc	.+10     	; 0xdd4 <__ftoa_engine+0x9c>
 dca:	e7 0e       	add	r14, r23
 dcc:	f8 1e       	adc	r15, r24
 dce:	49 1f       	adc	r20, r25
 dd0:	56 1f       	adc	r21, r22
 dd2:	c1 1d       	adc	r28, r1
 dd4:	77 0f       	add	r23, r23
 dd6:	88 1f       	adc	r24, r24
 dd8:	99 1f       	adc	r25, r25
 dda:	66 1f       	adc	r22, r22
 ddc:	06 94       	lsr	r0
 dde:	a1 f7       	brne	.-24     	; 0xdc8 <__ftoa_engine+0x90>
 de0:	05 90       	lpm	r0, Z+
 de2:	07 94       	ror	r0
 de4:	28 f4       	brcc	.+10     	; 0xdf0 <__ftoa_engine+0xb8>
 de6:	f8 0e       	add	r15, r24
 de8:	49 1f       	adc	r20, r25
 dea:	56 1f       	adc	r21, r22
 dec:	c7 1f       	adc	r28, r23
 dee:	d1 1d       	adc	r29, r1
 df0:	88 0f       	add	r24, r24
 df2:	99 1f       	adc	r25, r25
 df4:	66 1f       	adc	r22, r22
 df6:	77 1f       	adc	r23, r23
 df8:	06 94       	lsr	r0
 dfa:	a1 f7       	brne	.-24     	; 0xde4 <__ftoa_engine+0xac>
 dfc:	05 90       	lpm	r0, Z+
 dfe:	07 94       	ror	r0
 e00:	20 f4       	brcc	.+8      	; 0xe0a <__ftoa_engine+0xd2>
 e02:	49 0f       	add	r20, r25
 e04:	56 1f       	adc	r21, r22
 e06:	c7 1f       	adc	r28, r23
 e08:	d8 1f       	adc	r29, r24
 e0a:	99 0f       	add	r25, r25
 e0c:	66 1f       	adc	r22, r22
 e0e:	77 1f       	adc	r23, r23
 e10:	88 1f       	adc	r24, r24
 e12:	06 94       	lsr	r0
 e14:	a9 f7       	brne	.-22     	; 0xe00 <__ftoa_engine+0xc8>
 e16:	84 91       	lpm	r24, Z
 e18:	10 95       	com	r17
 e1a:	17 70       	andi	r17, 0x07	; 7
 e1c:	41 f0       	breq	.+16     	; 0xe2e <__ftoa_engine+0xf6>
 e1e:	d6 95       	lsr	r29
 e20:	c7 95       	ror	r28
 e22:	57 95       	ror	r21
 e24:	47 95       	ror	r20
 e26:	f7 94       	ror	r15
 e28:	e7 94       	ror	r14
 e2a:	1a 95       	dec	r17
 e2c:	c1 f7       	brne	.-16     	; 0xe1e <__ftoa_engine+0xe6>
 e2e:	e4 e5       	ldi	r30, 0x54	; 84
 e30:	f0 e0       	ldi	r31, 0x00	; 0
 e32:	68 94       	set
 e34:	15 90       	lpm	r1, Z+
 e36:	15 91       	lpm	r17, Z+
 e38:	35 91       	lpm	r19, Z+
 e3a:	65 91       	lpm	r22, Z+
 e3c:	95 91       	lpm	r25, Z+
 e3e:	05 90       	lpm	r0, Z+
 e40:	7f e2       	ldi	r23, 0x2F	; 47
 e42:	73 95       	inc	r23
 e44:	e1 18       	sub	r14, r1
 e46:	f1 0a       	sbc	r15, r17
 e48:	43 0b       	sbc	r20, r19
 e4a:	56 0b       	sbc	r21, r22
 e4c:	c9 0b       	sbc	r28, r25
 e4e:	d0 09       	sbc	r29, r0
 e50:	c0 f7       	brcc	.-16     	; 0xe42 <__ftoa_engine+0x10a>
 e52:	e1 0c       	add	r14, r1
 e54:	f1 1e       	adc	r15, r17
 e56:	43 1f       	adc	r20, r19
 e58:	56 1f       	adc	r21, r22
 e5a:	c9 1f       	adc	r28, r25
 e5c:	d0 1d       	adc	r29, r0
 e5e:	7e f4       	brtc	.+30     	; 0xe7e <__ftoa_engine+0x146>
 e60:	70 33       	cpi	r23, 0x30	; 48
 e62:	11 f4       	brne	.+4      	; 0xe68 <__ftoa_engine+0x130>
 e64:	8a 95       	dec	r24
 e66:	e6 cf       	rjmp	.-52     	; 0xe34 <__ftoa_engine+0xfc>
 e68:	e8 94       	clt
 e6a:	01 50       	subi	r16, 0x01	; 1
 e6c:	30 f0       	brcs	.+12     	; 0xe7a <__ftoa_engine+0x142>
 e6e:	08 0f       	add	r16, r24
 e70:	0a f4       	brpl	.+2      	; 0xe74 <__ftoa_engine+0x13c>
 e72:	00 27       	eor	r16, r16
 e74:	02 17       	cp	r16, r18
 e76:	08 f4       	brcc	.+2      	; 0xe7a <__ftoa_engine+0x142>
 e78:	20 2f       	mov	r18, r16
 e7a:	23 95       	inc	r18
 e7c:	02 2f       	mov	r16, r18
 e7e:	7a 33       	cpi	r23, 0x3A	; 58
 e80:	28 f0       	brcs	.+10     	; 0xe8c <__ftoa_engine+0x154>
 e82:	79 e3       	ldi	r23, 0x39	; 57
 e84:	7d 93       	st	X+, r23
 e86:	2a 95       	dec	r18
 e88:	e9 f7       	brne	.-6      	; 0xe84 <__ftoa_engine+0x14c>
 e8a:	10 c0       	rjmp	.+32     	; 0xeac <__ftoa_engine+0x174>
 e8c:	7d 93       	st	X+, r23
 e8e:	2a 95       	dec	r18
 e90:	89 f6       	brne	.-94     	; 0xe34 <__ftoa_engine+0xfc>
 e92:	06 94       	lsr	r0
 e94:	97 95       	ror	r25
 e96:	67 95       	ror	r22
 e98:	37 95       	ror	r19
 e9a:	17 95       	ror	r17
 e9c:	17 94       	ror	r1
 e9e:	e1 18       	sub	r14, r1
 ea0:	f1 0a       	sbc	r15, r17
 ea2:	43 0b       	sbc	r20, r19
 ea4:	56 0b       	sbc	r21, r22
 ea6:	c9 0b       	sbc	r28, r25
 ea8:	d0 09       	sbc	r29, r0
 eaa:	98 f0       	brcs	.+38     	; 0xed2 <__ftoa_engine+0x19a>
 eac:	23 95       	inc	r18
 eae:	7e 91       	ld	r23, -X
 eb0:	73 95       	inc	r23
 eb2:	7a 33       	cpi	r23, 0x3A	; 58
 eb4:	08 f0       	brcs	.+2      	; 0xeb8 <__ftoa_engine+0x180>
 eb6:	70 e3       	ldi	r23, 0x30	; 48
 eb8:	7c 93       	st	X, r23
 eba:	20 13       	cpse	r18, r16
 ebc:	b8 f7       	brcc	.-18     	; 0xeac <__ftoa_engine+0x174>
 ebe:	7e 91       	ld	r23, -X
 ec0:	70 61       	ori	r23, 0x10	; 16
 ec2:	7d 93       	st	X+, r23
 ec4:	30 f0       	brcs	.+12     	; 0xed2 <__ftoa_engine+0x19a>
 ec6:	83 95       	inc	r24
 ec8:	71 e3       	ldi	r23, 0x31	; 49
 eca:	7d 93       	st	X+, r23
 ecc:	70 e3       	ldi	r23, 0x30	; 48
 ece:	2a 95       	dec	r18
 ed0:	e1 f7       	brne	.-8      	; 0xeca <__ftoa_engine+0x192>
 ed2:	11 24       	eor	r1, r1
 ed4:	ef 90       	pop	r14
 ed6:	ff 90       	pop	r15
 ed8:	0f 91       	pop	r16
 eda:	1f 91       	pop	r17
 edc:	cf 91       	pop	r28
 ede:	df 91       	pop	r29
 ee0:	99 27       	eor	r25, r25
 ee2:	87 fd       	sbrc	r24, 7
 ee4:	90 95       	com	r25
 ee6:	08 95       	ret

00000ee8 <strrev>:
 ee8:	dc 01       	movw	r26, r24
 eea:	fc 01       	movw	r30, r24
 eec:	67 2f       	mov	r22, r23
 eee:	71 91       	ld	r23, Z+
 ef0:	77 23       	and	r23, r23
 ef2:	e1 f7       	brne	.-8      	; 0xeec <strrev+0x4>
 ef4:	32 97       	sbiw	r30, 0x02	; 2
 ef6:	04 c0       	rjmp	.+8      	; 0xf00 <strrev+0x18>
 ef8:	7c 91       	ld	r23, X
 efa:	6d 93       	st	X+, r22
 efc:	70 83       	st	Z, r23
 efe:	62 91       	ld	r22, -Z
 f00:	ae 17       	cp	r26, r30
 f02:	bf 07       	cpc	r27, r31
 f04:	c8 f3       	brcs	.-14     	; 0xef8 <strrev+0x10>
 f06:	08 95       	ret

00000f08 <__prologue_saves__>:
 f08:	2f 92       	push	r2
 f0a:	3f 92       	push	r3
 f0c:	4f 92       	push	r4
 f0e:	5f 92       	push	r5
 f10:	6f 92       	push	r6
 f12:	7f 92       	push	r7
 f14:	8f 92       	push	r8
 f16:	9f 92       	push	r9
 f18:	af 92       	push	r10
 f1a:	bf 92       	push	r11
 f1c:	cf 92       	push	r12
 f1e:	df 92       	push	r13
 f20:	ef 92       	push	r14
 f22:	ff 92       	push	r15
 f24:	0f 93       	push	r16
 f26:	1f 93       	push	r17
 f28:	cf 93       	push	r28
 f2a:	df 93       	push	r29
 f2c:	cd b7       	in	r28, 0x3d	; 61
 f2e:	de b7       	in	r29, 0x3e	; 62
 f30:	ca 1b       	sub	r28, r26
 f32:	db 0b       	sbc	r29, r27
 f34:	0f b6       	in	r0, 0x3f	; 63
 f36:	f8 94       	cli
 f38:	de bf       	out	0x3e, r29	; 62
 f3a:	0f be       	out	0x3f, r0	; 63
 f3c:	cd bf       	out	0x3d, r28	; 61
 f3e:	09 94       	ijmp

00000f40 <__epilogue_restores__>:
 f40:	2a 88       	ldd	r2, Y+18	; 0x12
 f42:	39 88       	ldd	r3, Y+17	; 0x11
 f44:	48 88       	ldd	r4, Y+16	; 0x10
 f46:	5f 84       	ldd	r5, Y+15	; 0x0f
 f48:	6e 84       	ldd	r6, Y+14	; 0x0e
 f4a:	7d 84       	ldd	r7, Y+13	; 0x0d
 f4c:	8c 84       	ldd	r8, Y+12	; 0x0c
 f4e:	9b 84       	ldd	r9, Y+11	; 0x0b
 f50:	aa 84       	ldd	r10, Y+10	; 0x0a
 f52:	b9 84       	ldd	r11, Y+9	; 0x09
 f54:	c8 84       	ldd	r12, Y+8	; 0x08
 f56:	df 80       	ldd	r13, Y+7	; 0x07
 f58:	ee 80       	ldd	r14, Y+6	; 0x06
 f5a:	fd 80       	ldd	r15, Y+5	; 0x05
 f5c:	0c 81       	ldd	r16, Y+4	; 0x04
 f5e:	1b 81       	ldd	r17, Y+3	; 0x03
 f60:	aa 81       	ldd	r26, Y+2	; 0x02
 f62:	b9 81       	ldd	r27, Y+1	; 0x01
 f64:	ce 0f       	add	r28, r30
 f66:	d1 1d       	adc	r29, r1
 f68:	0f b6       	in	r0, 0x3f	; 63
 f6a:	f8 94       	cli
 f6c:	de bf       	out	0x3e, r29	; 62
 f6e:	0f be       	out	0x3f, r0	; 63
 f70:	cd bf       	out	0x3d, r28	; 61
 f72:	ed 01       	movw	r28, r26
 f74:	08 95       	ret

00000f76 <_exit>:
 f76:	f8 94       	cli

00000f78 <__stop_program>:
 f78:	ff cf       	rjmp	.-2      	; 0xf78 <__stop_program>
